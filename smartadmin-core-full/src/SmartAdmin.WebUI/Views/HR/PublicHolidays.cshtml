@{ ViewData["Title"] = "Public holidays";
    ViewData["Category1"] = "HR";

    @using ViewModels.HR;
    @model PublicHolidayModel;
}

@section HeadBlock {
    <link rel="stylesheet" media="screen, print" href="~/css/fa-brands.css">
    <link rel="stylesheet" media="screen, print" href="~/css/formplugins/select2/select2.bundle.css">
    <link rel="stylesheet" media="screen, print" href="~/css/formplugins/bootstrap-datepicker/bootstrap-datepicker.css">

}

<div class="row">
    <div class="col-xl-12">

        <div id="panel-2" class="panel">

            <div class="panel-hdr">
                <h2>Public holidays</h2>
            </div>
            <div class="panel-container show">
                <div class="panel-content">
                    <div class="form-group">
                        <table class="table table-borderless" style="width:750px;">
                            <tr>
                                <td style="width:200px;">
                                    <label class="form-label md-header" for="office-select">City:</label>
                                    <select class="select2 form-control w-100" id="office-select" onchange="updateHolidayTable();">
                                        @for (var i = 0; i < Model.AllOffices.Count(); i++)
                                        {
                                            <option value="@Model.AllOffices.ElementAt(i).Id" selected="@(Convert.ToInt32(Url.ActionContext.RouteData.Values["officeId"]) == Model.AllOffices.ElementAt(i).Id)">@Model.AllOffices.ElementAt(i).Name</option>
                                        }
                                    </select>
                                </td>
                                <td style="width:150px;">
                                    <label class="form-label md-header" for="office-select">Year:</label>
                                    <select class="select2 form-control w-100" id="year-select" onchange="updateHolidayTable();">
                                        @for (var i = 0; i < Model.AllHolidayYears.Count(); i++)
                                        {
                                            var currentYear = DateTime.Now.Year;
                                            @if(Convert.ToInt32(@Url.ActionContext.RouteData.Values["holidayYear"]) == 0)
                                            {
                                                (@Url.ActionContext.RouteData.Values["holidayYear"]) = Convert.ToString(currentYear);
                                            }
                                            <option value="@Model.AllHolidayYears.ElementAt(i)" selected="@(Convert.ToInt32(Url.ActionContext.RouteData.Values["holidayYear"]) == @Model.AllHolidayYears.ElementAt(i))">@Model.AllHolidayYears.ElementAt(i)</option>
                                        }
                                    </select>
                                </td>
                                <td style="align-self:baseline;">
                                    <br/>
                                    <button type="button" class="btn btn-success" @(Model.AllowAddingAndEditingOfBankHoliday == false ? "hidden" : "") id="bank-holiday-add-update-control" data-toggle="modal" data-target="#add-public-holiday-modal">Add a new public holiday</button>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <input type="hidden" value="@Url.ActionContext.RouteData.Values["officeId"]" id="officeId-field" />
                    <input type="hidden" value="@Url.ActionContext.RouteData.Values["holidayYear"]" id="holidayYear-field" />
                    <div class="modal fade" id="add-public-holiday-modal" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">
                                        Add a new public holiday
                                    </h4>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true"><i class="@(Settings.Theme.IconPrefix) fa-times"></i></span>
                                    </button>
                                </div>
                                <form class="needs-validation" id="add-bank-holiday-form" novalidate>
                                    <div class="modal-body">


                                        <table class="table table-borderless">
                                            <tr>
                                                <td>
                                                    <label class="form-label md-header">Public holiday name *:</label>
                                                    <input type="text" required class="form-control" placeholder="(For example, Christmas...)" id="public-holiday-name-box">
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <label class="form-label md-header">Date *:</label>
                                                    <div class="input-group">
                                                        <input type="text" required class="form-control " placeholder="(Pick a date)" id="datepicker-4-3">
                                                        <div class="input-group-append">
                                                            <span class="input-group-text fs-xl">
                                                                <i class="@(Settings.Theme.IconPrefix) fa-calendar-exclamation"></i>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td align="right" style="border-spacing:0px;padding: 0px 10px 0px 0px;">
                                                    <div class="custom-control custom-switch" style="align-items:end">
                                                        <input type="checkbox" class="custom-control-input" id="half-day-checkbox" onchange="toggleHalfDay()">
                                                        <label class="custom-control-label" id="half-day-toggle-label" for="half-day-checkbox">Full day</label>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <label class="form-label md-header">Holiday for *:</label>
                                                    <select class="select2-placeholder-multiple custom-select" id="office-select-1" multiple="multiple" required="">
                                                        @for (var i = 0; i < Model.AllOffices.Count(); i++)
                                                        {
                                                            <option value="@Model.AllOffices.ElementAt(i).Id">@Model.AllOffices.ElementAt(i).Name</option>
                                                        }
                                                    </select>
                                                </td>
                                            </tr>
                                        </table>

                                    </div>
                                    <div class="modal-footer">
                                        <button type="submit" class="btn btn-success" onclick="AddPublicHoliday(event);">Add</button>
                                    </div>

                                </form>
                            </div>

                        </div>
                    </div>
                    <div class="modal fade" id="adding-success-modal" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">
                                        Success
                                    </h4>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="updateHolidayTable()">
                                        <span aria-hidden="true"><i class="@(Settings.Theme.IconPrefix) fa-times"></i></span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    Successfully added bank holiday <strong><label class="form-label" id="new-bank-holiday-name"></label></strong>
                                </div>
                                @*<div class="modal-footer">
                        <a class="btn btn-success" onclick="refreshPage();">Yes, approve timesheet</a>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>*@
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="editing-success-modal" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">
                                        Success
                                    </h4>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="updateHolidayTable()">
                                        <span aria-hidden="true"><i class="@(Settings.Theme.IconPrefix) fa-times"></i></span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    Successfully updated bank holiday <strong><label class="form-label" id="updated-bank-holiday-name"></label></strong>
                                </div>
                                @*<div class="modal-footer">
                        <a class="btn btn-success" onclick="refreshPage();">Yes, approve timesheet</a>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>*@
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="delete-public-holiday-modal" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">
                                        Confirm deletion
                                    </h4>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true"><i class="@(Settings.Theme.IconPrefix) fa-times"></i></span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    Are you sure you want to delete public holiday "<strong><label class="form-label" id="bank-holiday-name"></label></strong>" ?
                                </div>
                                <div class="modal-footer">
                                    <a onclick="deletePublicHoliday();" class="btn btn-success" asp-action="publicholidays"
                                           asp-route-officeId="@Url.ActionContext.RouteData.Values["officeId"]"
                                           asp-route-holidayYear="@Url.ActionContext.RouteData.Values["holidayYear"]">Delete</a>
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                    <input type="hidden" id="public-holiday-id" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />

                    <table id="dt-basic-example" class="table table-bordered table-hover table-sm table-striped w-100" width="500" style="width:500px;">
                        <thead style="color:white; background-color:#E84133">
                            <tr>
                                <th>Holiday</th>
                                <th>Date</th>
                                <th>Full day/ Half day</th>
                                <th @(Model.AllowAddingAndEditingOfBankHoliday == false ? "hidden" : "")>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.AllPublicHolidays.Count(); i++)
                            {
                                <tr>
                                    <td>@Model.AllPublicHolidays.ElementAt(i).Description</td>
                                    <td>@Model.AllPublicHolidays.ElementAt(i).BankHolidayDate.ToString("dddd d MMM yyyy")</td>
                                    <td>@(Model.AllPublicHolidays.ElementAt(i).IsHalfDay ? "Half day" : "Full day")</td>
                                    <td style="border-spacing:0px;padding:0px;width:90px;" @(Model.AllowAddingAndEditingOfBankHoliday == false ? "hidden" : "") align="center">
                                        @*<button type="button" class="btn btn-icon align-middle" onclick="openEditPopup(@i);" title="Edit"><i class="ni ni-note" style="color:green"></i></button>*@
                                        <a type="button" class="btn btn-icon align-middle" asp-controller="HR" asp-action="publicholidays"
                                           asp-route-officeId="@Url.ActionContext.RouteData.Values["officeId"]"
                                           asp-route-holidayYear="@Url.ActionContext.RouteData.Values["holidayYear"]"
                                           asp-route-publicHolidayIdToEdit="@i"
                                           title="Edit"><i class="ni ni-note" style="color:green"></i></a>
                                        <button type="button" class="btn btn-icon align-middle" data-toggle="modal" data-id="@Model.AllPublicHolidays.ElementAt(i).Id" onclick="loadDeleteModal(this)"
                                           data-target="#delete-public-holiday-modal" data-holiday-name="@Model.AllPublicHolidays.ElementAt(i).Description"
                                           title="Delete"><i class="fa-1x fal fa-trash-alt fa-x" style="color:red;"></i></button>
                                    </td>
                                </tr>
                            }
                        </tbody>

                    </table>

                    <input type="hidden" value="@ViewBag.currentIndex" id="current-Index" />
                    <div class="modal fade" id="edit-public-holiday-modal" role="dialog" aria-hidden="true">


                        <div class="modal-dialog" role="document">
                            @{
                                if (ViewBag.currentIndex != null)
                                {
                                    int j = ViewBag.currentIndex;
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h4 class="modal-title">
                                                Edit public holiday "@Model.AllPublicHolidays.ElementAt(j).Description"
                                            </h4>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="updateHolidayTable()">
                                                <span aria-hidden="true"><i class="@(Settings.Theme.IconPrefix) fa-times"></i></span>
                                            </button>
                                        </div>
                                        <form class="needs-validation" id="edit-bank-holiday-form" novalidate>
                                            <div class="modal-body">


                                                <table class="table table-borderless">
                                                    <tr>
                                                        <td>
                                                            <label class="form-label md-header">Public holiday name *:</label>
                                                            <input type="text" required class="form-control" value="@Model.AllPublicHolidays.ElementAt(j).Description" id="public-holiday-name-box-edit">
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <label class="form-label md-header">Date *:</label>
                                                            <div class="input-group">
                                                                <input type="text" required class="form-control " value="@Model.AllPublicHolidays.ElementAt(j).BankHolidayDate.ToString("dd-MM-yyyy")" id="datepicker-4-3-edit">
                                                                <div class="input-group-append">
                                                                    <span class="input-group-text fs-xl">
                                                                        <i class="@(Settings.Theme.IconPrefix) fa-calendar-exclamation"></i>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td align="right" style="border-spacing:0px;padding: 0px 10px 0px 0px;">
                                                            <div class="custom-control custom-switch" style="align-items:end">
                                                                <input type="checkbox" class="custom-control-input" checked="@Model.AllPublicHolidays.ElementAt(j).IsHalfDay" id="half-day-checkbox-edit" onchange="toggleHalfDayInEdit()">
                                                                <label class="custom-control-label" id="half-day-toggle-label-edit" for="half-day-checkbox-edit">@(Model.AllPublicHolidays.ElementAt(j).IsHalfDay ? "Half day" : "Full day")</label>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <label class="form-label md-header">Holiday for *:</label>
                                                            <select class="select2-placeholder-multiple custom-select" id="office-select-1-edit" multiple="multiple" required="">
                                                                @for (var i = 0; i < Model.AllOffices.Count(); i++)
                                                                {
                                                                    <option value="@Model.AllOffices.ElementAt(i).Id"
                                                                            selected="@((Model.AllOffices.ElementAt(i).Id == 4 && Model.AllPublicHolidays.ElementAt(j).IsAukbankHoliday == true) ||
                          (Model.AllOffices.ElementAt(i).Id == 11 && Model.AllPublicHolidays.ElementAt(j).IsBulgarianBankHoliday == true) ||
                          (Model.AllOffices.ElementAt(i).Id == 9 && Model.AllPublicHolidays.ElementAt(j).IsJapanBankHoliday == true) ||
                          (Model.AllOffices.ElementAt(i).Id == 13 && Model.AllPublicHolidays.ElementAt(j).IsRomanianBankHoliday == true) ||
                          (Model.AllOffices.ElementAt(i).Id == 15 && Model.AllPublicHolidays.ElementAt(j).IsCostaRicaBankHoliday == true))">
                                                                        @Model.AllOffices.ElementAt(i).Name
                                                                    </option>
                                                                }
                                                            </select>
                                                        </td>
                                                    </tr>
                                                </table>

                                            </div>
                                            <div class="modal-footer">
                                                <input type="hidden" id="holiday-id" value="@Model.AllPublicHolidays.ElementAt(j).Id" />
                                                <button type="submit" class="btn btn-success" onclick="UpdatePublicHoliday(event);">Save</button>
                                            </div>

                                        </form>
                                    </div>
                                }
                            }
                        </div>

                    </div>


                </div>
            </div>

        </div>
    </div>
</div>

<style>
    .select2-container {
        z-index: 99999;
    }

    body.modal-open {
        overflow: visible;
    }

    .was-validated .custom-select:invalid + .select2 .select2-selection {
        border-color: #fd3995;
        padding-right: calc(0.75em + 2.625rem);
        background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right 0.875rem center/8px 10px, url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23fd3995' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23fd3995' stroke='none'/%3e%3c/svg%3e") #fff no-repeat center right 1.875rem/calc(0.735em + 0.5rem) calc(0.735em + 0.5rem);
    }

    .was-validated .custom-select:invalid:focus + .select2 .select2-selection:invalid:focus {
        border-color: #fd3995;
        -webkit-box-shadow: 0 0 0 0.2rem rgba(253, 57, 149, 0.25);
        box-shadow: 0 0 0 0.2rem rgba(253, 57, 149, 0.25);
    }


    .was-validated .custom-select:valid + .select2 .select2-selection {
        border-color: #1dc9b7 !important;
        padding-right: calc(0.75em + 2.625rem);
        background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right 0.875rem center/8px 10px, url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%231dc9b7' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e") #fff no-repeat center right 1.875rem/calc(0.735em + 0.5rem) calc(0.735em + 0.5rem);
    }

    .was-validated .custom-select:valid:focus + .select2 .select2-selection:valid:focus {
        border-color: #1dc9b7;
        -webkit-box-shadow: 0 0 0 0.2rem rgba(29, 201, 183, 0.25);
        box-shadow: 0 0 0 0.2rem rgba(29, 201, 183, 0.25);
    }

    /*   .was-validated .select2:valid:focus {
            border-color: #1dc9b7;
            -webkit-box-shadow: 0 0 0 0.2rem rgba(29, 201, 183, 0.25);
            box-shadow: 0 0 0 0.2rem rgba(29, 201, 183, 0.25);
        }*/

    /*  *:focus {
        outline: 0px;
    }*/
</style>
@section ScriptsBlock {
    <script src="~/js/formplugins/select2/select2.bundle.js"></script>
    <script src="~/js/formplugins/bootstrap-datepicker/bootstrap-datepicker.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>
    <script>
        var controls = {
			leftArrow: '<i class="@(Settings.Theme.IconPrefix) fa-angle-left" style="font-size: 1.25rem"></i>',
			rightArrow: '<i class="@(Settings.Theme.IconPrefix) fa-angle-right" style="font-size: 1.25rem"></i>'
		}

        $(document).ready(function () {
            //document.getElementById('bank-holiday-add-update-control').hidden = "hidden";
            $('#datepicker-4-3').datepicker({
                todayHighlight: true,
                templates: controls,
                format: "dd/mm/yyyy",
            });

            $('#datepicker-4-3-edit').datepicker({
                todayHighlight: true,
                templates: controls,
                format: "dd/mm/yyyy",
            });

            $(function () {
                $('.select2').select2();
                $(".select2-placeholder-multiple").select2({
                    placeholder: "(Select office)"
                });
                $(".js-hide-search").select2({
                    minimumResultsForSearch: 1 / 0
                });
                $(".js-max-length").select2({
                    maximumSelectionLength: 2,
                    placeholder: "Select maximum 2 items"
                });
                //$(".select2-placeholder").select2({
                //    placeholder: "Select a state",
                //    allowClear: true
                //});
                $(".js-select2-icons").select2({
                    minimumResultsForSearch: 1 / 0,
                    templateResult: icon,
                    templateSelection: icon,
                    escapeMarkup: function (elm) {
                        return elm
                    }
                });
                function icon(elm) {
                    elm.element;
                    return elm.id ? "<i class='" + $(elm.element).data("icon") + " mr-2'></i>" + elm.text : elm.text
                }
                $(".js-data-example-ajax").select2({
                    ajax: {
                        url: "https://api.github.com/search/repositories",
                        dataType: 'json',
                        delay: 250,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page
                            };
                        },
                        processResults: function (data, params) {
                            // parse the results into the format expected by Select2
                            // since we are using custom formatting functions we do not need to
                            // alter the remote JSON data, except to indicate that infinite
                            // scrolling can be used
                            params.page = params.page || 1;
                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * 30) < data.total_count
                                }
                            };
                        },
                        cache: true
                    },
                    placeholder: 'Search for a repository',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 1,
                    templateResult: formatRepo,
                    templateSelection: formatRepoSelection
                });
                function formatRepo(repo) {
                    if (repo.loading) {
                        return repo.text;
                    }
                    var markup = "<div class='select2-result-repository clearfix d-flex'>" +
                        "<div class='select2-result-repository__avatar mr-2'><img src='" + repo.owner.avatar_url + "' class='width-2 height-2 mt-1 rounded' /></div>" +
                        "<div class='select2-result-repository__meta'>" +
                        "<div class='select2-result-repository__title fs-lg fw-500'>" + repo.full_name + "</div>";
                    if (repo.description) {
                        markup += "<div class='select2-result-repository__description fs-xs opacity-80 mb-1'>" + repo.description + "</div>";
                    }
                    markup += "<div class='select2-result-repository__statistics d-flex fs-sm'>" +
                        "<div class='select2-result-repository__forks mr-2'><i class='@(Settings.Theme.IconPrefix) fa-lightbulb'></i> " + repo.forks_count + " Forks</div>" +
                        "<div class='select2-result-repository__stargazers mr-2'><i class='@(Settings.Theme.IconPrefix) fa-star'></i> " + repo.stargazers_count + " Stars</div>" +
                        "<div class='select2-result-repository__watchers mr-2'><i class='@(Settings.Theme.IconPrefix) fa-eye'></i> " + repo.watchers_count + " Watchers</div>" +
                        "</div>" +
                        "</div></div>";
                    return markup;
                }
                function formatRepoSelection(repo) {
                    return repo.full_name || repo.text;
                }
            });

            $(function() {

                $('#datepicker-4-3').datepicker({
                    orientation: "bottom left",
                    todayHighlight: true,
                    templates: controls
                });

                $('#datepicker-4-3-edit').datepicker({
                    orientation: "bottom left",
                    todayHighlight: true,
                    templates: controls
                });

            });


            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });

            var currentIndex = document.getElementById('current-Index').value;

            if (currentIndex != '') {
                $('#edit-public-holiday-modal').modal("show");
            }
            
		});

		function updateHolidayTable() {
            var officeId = document.getElementById("office-select").value;
            var year = document.getElementById('year-select').value;
            window.location.href = `hr/publicholidays/${officeId}/${year}`;
        }

        function AddPublicHoliday(e) {

            var isValid = $("#add-bank-holiday-form").valid();
            if (isValid == true) {
                var publicHolidayName = document.getElementById('public-holiday-name-box').value;
                var dateString = document.getElementById('datepicker-4-3').value.toString("dd-MM-yyyy");
                var IsHalfDay = document.getElementById('half-day-checkbox').checked;
                var officeSelect = document.getElementById('office-select-1');
                var allOfficesSelected = '';
                if (officeSelect != null) {
                    for (var i = 0; i < officeSelect.options.length; i++) {
                        if (officeSelect.options[i].selected == true) {
                            allOfficesSelected += officeSelect.options[i].value + ',';
                        }
                    }
                }
                var stringToSend = publicHolidayName + '$' + dateString + '$' + IsHalfDay + '$' + allOfficesSelected;
                var xhr = new XMLHttpRequest();
                xhr.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        $('#add-public-holiday-modal').modal("hide");
                        $('#adding-success-modal').modal("show");
                        document.getElementById('new-bank-holiday-name').textContent = publicHolidayName;
                        e.preventDefault();
                    }
                }

                xhr.open("POST", "HR/AddPublicHoliday", false);
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                xhr.send(stringToSend);
                

            }
        }

        function toggleHalfDay() {
            $('#half-day-toggle-label').toggleText('Half day', 'Full day');
        }

        function toggleHalfDayInEdit() {
            $('#half-day-toggle-label-edit').toggleText('Half day', 'Full day');
        }

        //function openEditPopup(indexToEdit) {

        //    var xhr = new XMLHttpRequest();
        //    xhr.open("POST", "HR/publicholidays", false);
        //    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        //    xhr.send(indexToEdit);
 
        //    //$('#edit-public-holiday-modal').modal("show");
        //    window.location.reload(false);


        //}

        function UpdatePublicHoliday(e) {
            var isValid = $("#edit-bank-holiday-form").valid();
            if (isValid == true) {
                var publicHolidayName = document.getElementById('public-holiday-name-box-edit').value;
                var dateString = document.getElementById('datepicker-4-3-edit').value.toString("dd-MM-yyyy");
                var IsHalfDay = document.getElementById('half-day-checkbox-edit').checked;
                var officeSelect = document.getElementById('office-select-1-edit');
                var holidayId = document.getElementById('holiday-id').value;
                var allOfficesSelected = '';
                if (officeSelect != null) {
                    for (var i = 0; i < officeSelect.options.length; i++) {
                        if (officeSelect.options[i].selected == true) {
                            allOfficesSelected += officeSelect.options[i].value + ',';
                        }
                    }
                }
                var stringToSend = publicHolidayName + '$' + dateString + '$' + IsHalfDay + '$' + allOfficesSelected + '$' + holidayId;
                var xhr = new XMLHttpRequest();
                xhr.open("POST", "HR/UpdatePublicHoliday", false);
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                xhr.send(stringToSend);
                $('#edit-public-holiday-modal').modal("hide");
                $('#editing-success-modal').modal("show");
                document.getElementById('updated-bank-holiday-name').textContent = publicHolidayName;
                e.preventDefault();

            }
        }

        function loadDeleteModal(anchorTag) {
            var holidayId = parseInt(anchorTag.attributes['data-id'].nodeValue);
            var holidayName = anchorTag.attributes['data-holiday-name'].nodeValue;
            document.getElementById('bank-holiday-name').textContent = holidayName;
            document.getElementById('public-holiday-id').value = holidayId;
        }

        function deletePublicHoliday() {
            var holidayId = document.getElementById('public-holiday-id').value;
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "HR/DeletePublicHoliday", false);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.send(holidayId);
        }

    </script>
}
