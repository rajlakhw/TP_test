@{
    ViewData["Title"] = "Organisation";
    ViewData["PageName"] = "organisation";
    ViewData["Category1"] = "flow plus";
}
@using SmartAdmin.WebUI.Components
@using Global_Settings
@using System.Text.Json;
@model ViewModels.Organisation.OrgPageViewModel

@section HeadBlock {
    <link rel="stylesheet" media="screen, print" href="css/fa-solid.css">
    <link rel="stylesheet" media="screen, print" href="css/fa-duotone.css">
    <link rel="stylesheet" media="screen, print" href="~/css/formplugins/select2/select2.bundle.css">
    <link rel="stylesheet" media="screen, print" href="~/css/formplugins/ion-rangeslider/ion-rangeslider.css">
    <link rel="stylesheet" media="screen, print" href="~/css/datagrid/datatables/datatables.bundle.css">
    <link rel="stylesheet" media="screen, print" href="~/css/notifications/sweetalert2/sweetalert2.bundle.css">
}

<style>
    .select2-container {
        width: 75% !important;
    }

    .form-group {
        margin-bottom: 0.8rem;
    }

    .bg-tp-red {
        /*background-image: linear-gradient(250deg, #E84133, #bd3e29);*/
        background-color: #E84133;
    }

    h5 small, h6 small, .h5 small, .h6 small {
        font-size: 0.65rem;
    }
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

<div id="js-page-content">
    <div class="row justify-content-between px-5">
        @if (Model.Organisation.DeletedDate != null)
        {
            <div class="col-12 mb-3 text-center">
                <i class="fad fa-exclamation-triangle fa-lg" style="color: red;"></i>
                <span style="color:red;">
                    Note that this organisation has
                    been deleted. If this was accidental, please do not add a new duplicate organisation,
                    but instead contact
                    <a href="mailto:ITSupport@translateplus.com">IT Support</a>
                    to un-delete the organisation.
                </span>
            </div>
        }
        <div class="col-lg-4 mb-3 text-center">
            <div class="row">
                <label class="form-label col-lg-3 d-flex align-items-center px-0">Group</label>
                <div class="col text-left">
                    <a target="_blank" style="text-decoration: none !important; color: #BA9765;" asp-controller="OrgGroup" asp-route-GroupID="@Model.Organisation.OrgGroupId">
                        @(Model.Organisation.OrgGroupId + " - " + Model.Organisation.OrgGroupName)
                    </a>
                    @if (Model.Organisation.IsOrgGroupDeleted)
                    {<span class="font-italic" style="color: red;"> (Deleted)</span>}
                </div>
            </div>
            <div class="row">
                <label class="form-label col-lg-3 d-flex align-items-center px-0">Organisation</label>
                <label class="col text-left">@(Model.Organisation.Id + " - " + Model.Organisation.OrgName)</label>
            </div>
        </div>

        <div class="col-lg-4 mb-3 text-center">
            @if (Model.Organisation.LogoImageBase64 != "" && Model.Organisation.LogoImageBase64 != null)
            {
                <img src="@Model.Organisation.LogoImageBase64" height="100" style="max-width: -webkit-fill-available;" alt="Organisation Logo" />
            }
            else if (Model.Organisation.CustomerLogoImageBinary != null)
            {
                var binaryImg = "data:image/png;base64, " + Convert.ToBase64String(Model.Organisation.CustomerLogoImageBinary);
                <img src="@binaryImg" height="100" style="max-width: -webkit-fill-available;" alt="Organisation Logo" />
            }
        </div>

        <div class="col-lg-4 mb-3 text-center">
            <div class="row justify-content-lg-end">
                <a href="@Model.KeyClientInfoFolder">
                    <i class="fal fa-folder-open fa-2x color-black d-block"></i>
                    KCI
                </a>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            @*Company information*@
            <div class="panel" data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <i class="fal fa-info-circle fa-2x color-black color-black"></i> &nbsp; &nbsp;
                    <h2>Company information</h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <div class="container">
                            <form id="@Model.keyInfoSection">
                                <div class="form-group row ">
                                    <label class="form-label col-lg-3 d-flex align-items-center">Organisation name</label>
                                    <input asp-for="@Model.Organisation.OrgName" type="text" id="example-input-material" class="col-lg-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row justify-content-between">
                                    <label class="form-label col-lg-3 d-flex align-items-center">Address</label>
                                    <input asp-for="@(Model.Organisation.HouseNumber)" type="number" id="example-input-material" class="col-lg-1 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="5">
                                    <div class="col-lg-1"></div>
                                    <input asp-for="@(Model.Organisation.Address1)" type="text" id="example-input-material" class="col-lg-7 align-self-end form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Address1">
                                    <div class="col-lg-3 p-0"></div>
                                    <span class="help-block col-lg-9 px-0">House number</span>
                                    <div class="col-lg-3"></div>
                                    <input asp-for="@(Model.Organisation.Address2)" type="text" id="example-input-material" class="col-lg-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Address2">
                                    <div class="col-lg-1"></div>
                                    <input asp-for="@(Model.Organisation.Address3)" type="text" id="example-input-material" class="col-lg-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Address3">
                                    <div class="col-lg-3"></div>
                                    <input asp-for="@(Model.Organisation.Address4)" type="text" id="example-input-material" class="col-lg-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Address4">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">County/State</label>
                                    <input asp-for="@Model.Organisation.CountyOrState" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">City</label>
                                    <input asp-for="@Model.Organisation.City" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-3 d-flex align-items-center">Country</label>
                                    @*<select asp-for="Countries" asp-items="@(new SelectList(Model.Countries.ToList().ConvertAll(x=> new SelectListItem() { Text = x.CountryName, Value = x.Id.ToString() }), "Value", "Text"))" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder=""></select>*@
                                    <select id="lg-dropdown-overlay" name="@nameof(Model.Countries)" class="col-3 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @foreach (var country in Model.Countries)
                                        {
                                            @if (Model.Organisation.CountryId == country.Id)
                                            {
                                                <option value="@country.Id" selected="selected">@country.CountryName</option>
                                            }
                                            else
                                            {
                                                <option value="@country.Id">@country.CountryName</option>
                                            }
                                        }
                                    </select>
                                    @*</div>
                                        <div class="form-group row">*@
                                    <label class="form-label col-2 d-flex align-items-center justify-content-lg-center">Region</label>
                                    <select id="example-input-material" name="@nameof(Model.Regions)" class="col-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @foreach (var region in Model.Regions)
                                        {
                                            if (Model.Organisation.AltairRegionId == region.Id)
                                            {
                                                <option value="@region.Id" selected="selected">@region.RegionName</option>
                                            }
                                            else
                                            {
                                                <option value="@region.Id">@region.RegionName</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Postcode/Zip</label>
                                    <input asp-for="@Model.Organisation.PostcodeOrZip" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="1234">
                                </div>
                                @*<div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Email address</label>
                                    <input asp-for="@Model.Organisation.EmailAddress" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                    </div>*@
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Email address</label>
                                    <input asp-for="@Model.Organisation.EmailAddress" type="text" data-inputmask="'alias': 'email'" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent">
                                    <span class="col-sm-3"></span>
                                    <span class="help-block">JohnDoe@gmail.com</span>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Website</label>
                                    <input asp-for="@Model.Organisation.WebAddress" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="https://www.translateplus.com">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Phone</label>
                                    <select id="example-input-material" name="@nameof(Model.Organisation.PhoneCountryId)" class="col-sm-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        <option></option>
                                        @foreach (var country in Model.Countries)
                                        {
                                            @if (Model.Organisation.PhoneCountryId == country.Id)
                                            {
                                                <option value="@country.Id" selected="selected">@("+" + country.DiallingPrefix + " " + country.CountryName)</option>
                                            }
                                            else
                                            {
                                                <option value="@country.Id">@("+" + country.DiallingPrefix + " " + country.CountryName)</option>
                                            }
                                        }
                                    </select>
                                    <div class="col-lg-1"></div>
                                    <input asp-for="@Model.Organisation.PhoneNumber" type="text" id="example-input-material" class="text-center col-sm-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Phone number">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Fax</label>
                                    <select id="example-input-material" name="@nameof(Model.Organisation.FaxCountryId)" class="col-sm-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        <option></option>
                                        @foreach (var country in Model.Countries)
                                        {
                                            @if (Model.Organisation.FaxCountryId == country.Id)
                                            {
                                                <option value="@country.Id" selected="selected">@("+" + country.DiallingPrefix + " " + country.CountryName)</option>
                                            }
                                            else
                                            {
                                                <option value="@country.Id">@("+" + country.DiallingPrefix + " " + country.CountryName)</option>
                                            }
                                        }
                                    </select>
                                    <div class="col-lg-1"></div>
                                    <input asp-for="@Model.Organisation.FaxNumber" type="text" id="example-input-material" class="text-center col-sm-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Fax number">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Red Alert</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.IsOnRedAlert" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.IsOnRedAlert)" disabled="@(!Model.redAlertControl)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.IsOnRedAlert)">On</label>
                                    </div>
                                </div>
                                <div class="form-group row" id="redAlertReasonDiv" style="display:none;">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Red Alert Reason</label>
                                    <textarea type="text" id="redAlertReason" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Reason"></textarea>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Financial Red Alert</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.IsOnFinancialRedAlert" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.IsOnFinancialRedAlert)" disabled="@(!Model.redAlertControl)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.IsOnFinancialRedAlert)">On</label>
                                    </div>
                                </div>
                                <div class="form-group row" id="financialRedAlertReasonDiv" style="display:none;">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Fianancial Red Alert Reason</label>
                                    <textarea type="text" id="financialRedAlertReason" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Reason"></textarea>
                                </div>
                                <div class="form-group-row d-flex flex-row-reverse">
                                    @if (Model.Organisation.DeletedDate == null && Model.keyInfoButton == true)
                                    {
                                        <button class="@(Settings.Theme.IconPrefix) btn btn-outline-default" type="submit" title="Save"><i class="far fa-cloud-upload fa-2x color-black"></i></button>
                                    }
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            @*Job settings*@
            <div class="panel" data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <i class="fal fa-tools fa-2x color-black"></i> &nbsp; &nbsp;
                    <h2>
                        Job settings
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <div class="container">
                            <form id="@Model.jobSettingsSection">
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Jobs primarily handled in</label>
                                    <select name="@nameof(Model.Organisation.JobServerLocation)" class="col-lg-3 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @if (Model.Organisation.JobServerLocation == 0)
                                        {
                                            <option value="0" selected>London</option>
                                        }
                                        else
                                        {
                                            <option value="0">London</option>
                                        }
                                        @if (Model.Organisation.JobServerLocation == 1)
                                        {
                                            <option value="1" selected disabled>Sofia</option>
                                        }
                                        else
                                        {
                                            <option value="1" disabled>Sofia</option>
                                        }
                                        @if (Model.Organisation.JobServerLocation == 2)
                                        {
                                            <option value="2" selected>Paris</option>
                                        }
                                        else
                                        {
                                            <option value="2">Paris</option>
                                        }
                                    </select>

                                    <label class="form-label col-sm-3 d-flex align-items-center">Client specifically requested their job files stay within</label>
                                    <select name="@nameof(Model.Organisation.JobFilesToBeSavedWithinRegion)" class="col-lg-3 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @if (Model.Organisation.JobFilesToBeSavedWithinRegion == 0)
                                        {
                                            <option value="0" selected>No preference</option>
                                        }
                                        else
                                        {
                                            <option value="0">No preference</option>
                                        }
                                        @if (Model.Organisation.JobFilesToBeSavedWithinRegion == 2)
                                        {
                                            <option value="2" selected>EEA</option>
                                        }
                                        else
                                        {
                                            <option value="2">EEA</option>
                                        }
                                        @if (Model.Organisation.JobFilesToBeSavedWithinRegion == 1)
                                        {
                                            <option value="1" selected>UK</option>
                                        }
                                        else
                                        {
                                            <option value="1">UK</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Allow job priority options</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.AllowPriority" type="checkbox" disabled="@(Model.IsEnabledAllowPriorityCheckbox == false ? "disabled" : null)" class="custom-control-input" id="@nameof(Model.Organisation.AllowPriority)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.AllowPriority)">Allow</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Linguist rating</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        @Html.CheckBox(nameof(Model.Organisation.LinguistRatingEnabled), Model.Organisation.LinguistRatingEnabled ?? false, new { Class = "custom-control-input", id = nameof(Model.Organisation.LinguistRatingEnabled) })
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.LinguistRatingEnabled)">Enable linguist rating for this organisation</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Automated job setup</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        @Html.CheckBox(nameof(Model.Organisation.EnabledForClientAutomation), Model.Organisation.EnabledForClientAutomation ?? false, new { Class = "custom-control-input", id = nameof(Model.Organisation.EnabledForClientAutomation) })
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.EnabledForClientAutomation)">Enable auto job set up for this organisation</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Trados template file path</label>
                                    <textarea asp-for="@Model.Organisation.TradosProjectTemplatePath" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="\\gblonpfspdm0005\Jobs\83923 - Test Org 1 in Live System\Key Client Info\Automation\LE Template.sdltpl"></textarea>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">High/low margins threshold</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        @Html.CheckBox(nameof(Model.Organisation.EnabledForOrgLevelMarginsThreshold), Model.Organisation.EnabledForOrgLevelMarginsThreshold ?? false, new { Class = "custom-control-input", id = nameof(Model.Organisation.EnabledForOrgLevelMarginsThreshold) })
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.EnabledForOrgLevelMarginsThreshold)">Enable org level high/low margin thresholds</label>
                                    </div>
                                </div>
                                @{var displayMargins = Model.Organisation.EnabledForOrgLevelMarginsThreshold != null && Model.Organisation.EnabledForOrgLevelMarginsThreshold != false ? "" : "display: none;";}
                                <div id="marginsThresholds" style="@displayMargins">
                                    <div class="form-group row">
                                        <label class="form-label col-sm-3 d-flex align-items-center">Low margin threshold</label>
                                        <input asp-for="@Model.Organisation.MarginsApprovalLowerThreshold" type="number" class="form-control col-2" placeholder="50">
                                        <label class="form-label col-sm d-flex align-items-center"> %</label>
                                    </div>
                                    <div class="form-group row">
                                        <label class="form-label col-sm-3 d-flex align-items-center">High margin threshold</label>
                                        <input asp-for="@Model.Organisation.MarginsApprovalUpperThreshold" type="number" class="form-control col-2" placeholder="100">
                                        <label class="form-label col-sm d-flex align-items-center"> %</label>
                                    </div>
                                </div>

                                @*FUZZY*@
                                @{
                                    string displayFuzzyBand1 = Model.Organisation.FuzzyBand1TopPercentage != null && Model.Organisation.FuzzyBand1TopPercentage > 0 ? "" : "none";
                                    string displayFuzzyBand2 = Model.Organisation.FuzzyBand2TopPercentage != null && Model.Organisation.FuzzyBand2TopPercentage > 0 ? "" : "none";
                                    string displayFuzzyBand3 = Model.Organisation.FuzzyBand3TopPercentage != null && Model.Organisation.FuzzyBand3TopPercentage > 0 ? "" : "none";
                                    string displayFuzzyBand4 = Model.Organisation.FuzzyBand4TopPercentage != null && Model.Organisation.FuzzyBand4TopPercentage > 0 ? "" : "none";
                                }
                                <div class="form-group">
                                    <div class="row-cols-1 text-center">
                                        <span class="help-block">If you want to add 2nd Fuzzy band just lower the upper percentage of Band 1.</span>
                                    </div>
                                </div>
                                <div class="form-group" style="display: @displayFuzzyBand1;">
                                    <div class="row row-cols bg-warning text-center justify-content-between">
                                        @*<div class="col-auto">@Model.Organisation.FuzzyBand1BottomPercentage%</div>*@
                                        <div class="col font-weight-bolder text-white">Band 1</div>
                                        @*<div class="col-auto">@Model.Organisation.FuzzyBand1TopPercentage%</div>*@
                                    </div>
                                    <input id="band1" type="text" value="" class="d-none" tabindex="-1" readonly="">
                                    @*<div class="input-group">
                                        <input asp-for="@Model.Organisation.FuzzyBand1BottomPercentage" type="number" aria-label="Last name" class="form-control" placeholder="End" id="name-l">
                                        <input asp-for="@Model.Organisation.FuzzyBand1TopPercentage" type="number" aria-label="First name" class="form-control" placeholder="Start" id="name-f">
                                        </div>*@
                                </div>
                                <div class="form-group" style="display: @displayFuzzyBand2;">
                                    <div class="row row-cols bg-info text-center justify-content-between">
                                        @*<div class="col-auto">@Model.Organisation.FuzzyBand2BottomPercentage%</div>*@
                                        <div class="col font-weight-bolder text-white">Band 2</div>
                                        @*<div class="col-auto">@Model.Organisation.FuzzyBand2TopPercentage%</div>*@
                                    </div>
                                    <input id="band2" type="text" value="" class="d-none" tabindex="-1" readonly="">
                                </div>
                                <div class="form-group" style="display: @displayFuzzyBand3;">
                                    <div class="row row-cols bg-success text-center justify-content-between">
                                        @*<div class="col-auto">@Model.Organisation.FuzzyBand3BottomPercentage%</div>*@
                                        <div class="col font-weight-bolder text-white">Band 3</div>
                                        @*<div class="col-auto">@Model.Organisation.FuzzyBand3TopPercentage%</div>*@
                                    </div>
                                    <input id="band3" type="text" value="" class="d-none" tabindex="-1" readonly="">
                                </div>
                                <div class="form-group" style="display: @displayFuzzyBand4;">
                                    <div class="row row-cols bg-dark text-center justify-content-between">
                                        @*<div class="col-auto">@Model.Organisation.FuzzyBand4BottomPercentage%</div>*@
                                        <div class="col font-weight-bolder text-white">Band 4</div>
                                        @*<div class="col-auto">@Model.Organisation.FuzzyBand4TopPercentage%</div>*@
                                    </div>
                                    <input id="band4" type="text" value="" class="d-none" tabindex="-1" readonly="">
                                </div>

                                <div class="form-group-row d-flex flex-row-reverse">
                                    @if (Model.Organisation.DeletedDate == null && Model.jobSettingsButton == true)
                                    {
                                        <button class="@(Settings.Theme.IconPrefix) btn btn-outline-default" type="submit" title="Save"><i class="far fa-cloud-upload fa-2x color-black"></i></button>
                                    }
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            @*General information*@
            <div class="panel" data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <i class="fal fa-info fa-2x color-black"></i> &nbsp; &nbsp;
                    <h2>
                        General information
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <div class="container">
                            <form id="@Model.generalInfoSection">
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Added on</label>
                                    <label class="form-label col-sm-9">@Model.Organisation.CreatedDate.ToString("dd MMMM yyyy HH:mm")</label>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Added by</label>
                                    @*<label class="form-label col-sm-9">Some name here</label>*@
                                    <div class="form-label col-sm-9">@await Component.InvokeAsync("EmployeeDetails", new { employeeId = Model.Organisation.CreatedByEmployeeId, displayJobTitle = true })</div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Last modified on</label>
                                    <label class="form-label col-sm-9">
                                        @if (Model.Organisation.LastModifiedDate.HasValue)
                                        {
                                            @Model.Organisation.LastModifiedDate.Value.ToString("dd MMMM yyyy HH:mm")
                                        }
                                    </label>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Last modified by</label>
                                    @*<label class="form-label col-sm-9">Some name here</label>*@
                                    <div class="form-label col-sm-9">@await Component.InvokeAsync("EmployeeDetails", new { employeeId = Model.Organisation.LastModifiedByEmployeeId, displayJobTitle = true })</div>
                                </div>
                                <div class="form-group row align-items-center">
                                    <div class="col-3 align-items-center">
                                        <label class="form-label d-block text-center">Notes</label>
                                        <span class="help-block">
                                            (Do not add any invoicing notes here. Please contact Accounts, who will update their records for this client)
                                        </span>
                                    </div>
                                    <textarea asp-for="@Model.Organisation.Notes" class="col-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent height-lg" placeholder="Notes"></textarea>
                                </div>
                                <div class="form-group-row d-flex flex-row-reverse">
                                    @if (Model.Organisation.DeletedDate == null && Model.generalInfoButton == true)
                                    {
                                        <button class="@(Settings.Theme.IconPrefix) btn btn-outline-default" type="submit" title="Save"><i class="far fa-cloud-upload fa-2x color-black"></i></button>
                                    }
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            @*i plus settings*@
            <div class="panel" data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <i class="fal fa-cogs fa-2x color-black"></i> &nbsp; &nbsp;
                    <h2>
                        i plus/client flow plus settings
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <div class="container">
                            <form id="@Model.iplusSettingsSection">
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Client review</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.ExtranetShowClientReviewOptions" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.ExtranetShowClientReviewOptions)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ExtranetShowClientReviewOptions)">Show client review options</label>
                                    </div>
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.ExtranetIncludeClientReviewByDefault" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.ExtranetIncludeClientReviewByDefault)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ExtranetIncludeClientReviewByDefault)">Pre-select client review by default</label>
                                    </div>
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.ExtranetSendClientReviewDeadlineReminders" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.ExtranetSendClientReviewDeadlineReminders)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ExtranetSendClientReviewDeadlineReminders)">Automatically notify client reviewers about deadlines</label>
                                    </div>
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.AllowAssigningClientReviewer" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.AllowAssigningClientReviewer)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.AllowAssigningClientReviewer)">Allow job submitter to pick reviewers</label>
                                    </div>
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        @Html.CheckBox(nameof(Model.Organisation.ManageReviews), Model.Organisation.ManageReviews ?? false, new { Class = "custom-control-input", id = nameof(Model.Organisation.ManageReviews) })
                                        @*<input asp-for="@Model.Organisation.ManageReviews" type="checkbox" class="custom-control-input" id="customSwitch1">*@
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ManageReviews)">The client will manage their design plus reviews</label>
                                    </div>
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        @Html.CheckBox(nameof(Model.Organisation.EnabledForPerSegmentCommenting), Model.Organisation.EnabledForPerSegmentCommenting ?? false, new { Class = "custom-control-input", id = nameof(Model.Organisation.EnabledForPerSegmentCommenting) })
                                        @*<input asp-for="@Model.Organisation.EnabledForPerSegmentCommenting" type="checkbox" class="custom-control-input" id="customSwitch1">*@
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.EnabledForPerSegmentCommenting)">The client will be enabled for per segment commenting</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">DTP</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        @Html.CheckBox(nameof(Model.Organisation.ExtranetShowDtpoptions), Model.Organisation.ExtranetShowDtpoptions ?? false, new { Class = "custom-control-input", id = nameof(Model.Organisation.ExtranetShowDtpoptions) })
                                        @*<input asp-for="@Model.Organisation.ExtranetShowDtpoptions" type="checkbox" class="custom-control-input" id="customSwitch1">*@
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ExtranetShowDtpoptions)">Show DTP options</label>
                                    </div>
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        @Html.CheckBox(nameof(Model.Organisation.ExtranetDtpoptionSelectedByDefault), Model.Organisation.ExtranetDtpoptionSelectedByDefault ?? false, new { Class = "custom-control-input", id = nameof(Model.Organisation.ExtranetDtpoptionSelectedByDefault) })
                                        @*<input asp-for="@Model.Organisation.ExtranetDtpoptionSelectedByDefault" type="checkbox" class="custom-control-input" id="customSwitch1">*@
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ExtranetDtpoptionSelectedByDefault)">Pre-select DTP by default</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Timeout</label>
                                    <input asp-for="@Model.Organisation.IplusTimeOut" type="number" id="example-input-material" class="col-1 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Minutes">
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <span class="col-sm-9 help-block">
                                        The maximum number of minutes is 120
                                    </span>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Allow cancellation of jobs</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.CanCancelJobsViaExtranet" type="checkbox" disabled="@(Model.IsEnabledAllowPriorityCheckbox == false ? "disabled" : null)" class="custom-control-input" id="@nameof(Model.Organisation.CanCancelJobsViaExtranet)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.CanCancelJobsViaExtranet)">Allow</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm">Allow requests of jobs and quotes with no deadline</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.ExtranetAllowRequestOfJobsAndQuotesWithNoDeadline" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.ExtranetAllowRequestOfJobsAndQuotesWithNoDeadline)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ExtranetAllowRequestOfJobsAndQuotesWithNoDeadline)">Allow</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Notifications</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.IncludeInNotificationsOn" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.IncludeInNotificationsOn)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.IncludeInNotificationsOn)">Include the following when sending notifications</label>
                                    </div>
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <textarea asp-for="@Model.Organisation.IncludeInNotifications" id="@nameof(Model.Organisation.IncludeInNotifications)" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Enriquer@translateplus.com,Martin@translateplus.com"></textarea>
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <span class="help-block">
                                        Separate e-mail addresses with comma and no spaces
                                    </span>
                                </div>
                                <div class="form-group-row d-flex flex-row-reverse">
                                    @if (Model.Organisation.DeletedDate == null && Model.iplusSettingsButton == true)
                                    {
                                        <button class="@(Settings.Theme.IconPrefix) btn btn-outline-default" type="submit" title="Save"><i class="far fa-cloud-upload fa-2x color-black"></i></button>
                                    }
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            @*Sales & Marketing information*@
            <div class="panel" data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <i class="fal fa-globe-europe fa-2x color-black"></i> &nbsp; &nbsp;
                    <h2>
                        Sales & Marketing information
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <div class="container">
                            <form id="@Model.salesAndMarketingSection">
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Sales category</label>
                                    <select name="@nameof(Model.Organisation.SalesCategoryId)" class="col-sm-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @foreach (var category in Model.OrgSalesCategories)
                                        {
                                            if (Model.Organisation.SalesCategoryId == category.Id)
                                            {
                                                <option value="@category.Id" selected>@category.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@category.Id">@category.Name</option>
                                            }
                                        }
                                    </select>
                                </div>

                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Direct sales/marketing</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input type="checkbox" class="custom-control-input" asp-for="@Model.Organisation.ExcludeFromDirectMarketing" id="@nameof(Model.Organisation.ExcludeFromDirectMarketing)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ExcludeFromDirectMarketing)">Exclude from calling lists, e-mail shots or other direct sales or marketing activity</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Client technology</label>
                                    <select name="@nameof(Model.ClientTechnologies)" class="select2 form-control" multiple="multiple" id="client-technology-select">
                                        @foreach (var tech in Model.ClientTechnologies)
                                        {
                                            if (Model.OrgTechnologyRelationships.Select(x =>
                                            x.OrgTechnologyId).Contains(tech.Id))
                                            {
                                                <option value="@tech.Id" selected="">@tech.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@tech.Id">@tech.Name</option>
                                            }
                                        }
                                    </select>
                                    @*<select multiple="" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent">
                                            @foreach (var tech in Model.ClientTechnologies)
                                            {
                                                if (Model.OrgTechnologyRelationships.Select(x => x.OrgTechnologyId).Contains(tech.Id))
                                                {
                                                    <option value="@tech.Id" selected>@tech.Name</option>
                                                }
                                                else
                                                {
                                                    <option value="@tech.Id">@tech.Name</option>
                                                }
                                            }
                                        </select>*@
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Legal status</label>
                                    <select name="@nameof(Model.Organisation.LegalStatusId)" class="col-sm-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @foreach (var status in Model.OrgLegalStatusCategories)
                                        {
                                            if (Model.Organisation.LegalStatusId == status.Id)
                                            {
                                                <option value="@status.Id" selected>@status.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@status.Id">@status.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Corporate Groupe</label>
                                    <select name="@nameof(Model.Organisation.CorporateGroupeId)" class="col-sm-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        <option value="0">Please select</option>
                                        @foreach (var group in Model.AltairCorporateGroups)
                                        {
                                            if (Model.Organisation.CorporateGroupeId == group.Id)
                                            {
                                                <option value="@group.Id" selected>@group.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@group.Id">@group.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Industry sectors</label>
                                    <select name="@nameof(Model.OrgIndustrySectors)" class="select2 form-control" multiple="multiple" id="client-industry-select">
                                        @foreach (var sector in Model.OrgIndustrySectors.OrderBy(x => x.Name))
                                        {
                                            if (Model.OrgIndustryRelationships.Select(x => x.OrgIndustryId).Contains(sector.Id))
                                            {
                                                <option value="@sector.Id" selected="">@sector.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@sector.Id">@sector.Name</option>
                                            }
                                        }
                                    </select>
                                    @*<select multiple="" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent">
                                            @foreach (var sector in Model.OrgIndustrySectors.OrderBy(x => x.Name))
                                            {
                                                if (Model.OrgIndustryRelationships.Select(x => x.OrgIndustryId).Contains(sector.Id))
                                                {
                                                    <option value="@sector.Id" selected>@sector.Name</option>
                                                }
                                                else
                                                {
                                                    <option value="@sector.Id">@sector.Name</option>
                                                }
                                            }
                                        </select>*@
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Main industry</label>
                                    <select name="@nameof(Model.Organisation.MainIndustryId)" class="col-sm-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @foreach (var mainIndustry in Model.OrgMainIndustries)
                                        {
                                            if (Model.Organisation.MainIndustryId == mainIndustry.Id)
                                            {
                                                <option value="@mainIndustry.Id" selected>@mainIndustry.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@mainIndustry.Id">@mainIndustry.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">How did they hear about us</label>
                                    <select name="@nameof(Model.Organisation.TpintroductionSource)" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @foreach (var intro in Model.OrgIntroSources)
                                        {
                                            if (Model.Organisation.TpintroductionSource == intro.Id)
                                            {
                                                <option value="@intro.Id" selected>@intro.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@intro.Id">@intro.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Org related alerts</label>
                                    <div class="custom-control custom-switch col-sm-6 align-items-center">
                                        <input type="radio" class="custom-control-input d-flex" id="alert" value="true" checked="@(Model.Organisation.SpendFrequencyAlertDays > 0)" name="@(nameof(Model.Organisation.SpendFrequencyAlertDays) + ".checkbox")">
                                        <label class="custom-control-label" for="alert">Alert if this organisation stops spending after</label>
                                    </div>
                                    <input asp-for="@Model.Organisation.SpendFrequencyAlertDays" type="number" id="example-input-material" class="col-sm-2 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="0">
                                    <label class="form-label col-sm-1 d-flex align-items-center">day(s)</label>
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input type="radio" class="custom-control-input" id="dontAlert" value="false" checked="@(Model.Organisation.SpendFrequencyAlertDays == 0)" name="@(nameof(Model.Organisation.SpendFrequencyAlertDays) + ".checkbox")">
                                        <label class="custom-control-label" for="dontAlert">Do not alert if this organisation stops spending</label>
                                    </div>
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        @Html.CheckBox(nameof(Model.Organisation.AlertClientOfNonApprovedLinguists), Model.Organisation.AlertClientOfNonApprovedLinguists ?? false, new { Class = "custom-control-input", id = nameof(Model.Organisation.AlertClientOfNonApprovedLinguists) })
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.AlertClientOfNonApprovedLinguists)">The client will need to be alerted if a non-approved linguist is used for their jobs</label>
                                    </div>
                                </div>
                                <div class="form-group row">

                                    <label class="form-label col-lg-3 d-flex align-items-center">Spend this financial year</label>
                                    <label class="form-label col-lg-2 d-flex align-items-center px-1">£ @Model.Organisation.ClientSpendCurrentFinancialYear.GetValueOrDefault().ToString("N2")</label>

                                    <label class="form-label col-lg-4 d-flex align-items-center">Spend last financial year</label>
                                    <label class="form-label col-lg-2 d-flex align-items-center px-1">£ @Model.Organisation.ClientSpendLastFinancialYear.GetValueOrDefault().ToString("N2")</label>

                                    <label class="form-label col-lg-3 d-flex align-items-center">Spend last 3 months</label>
                                    <label class="form-label col-lg-2 d-flex align-items-center px-1">£ @Model.Organisation.ClientSpendOverLast3Months.GetValueOrDefault().ToString("N2")</label>

                                    <label class="form-label col-lg-4 d-flex align-items-center">Spend last 12 months</label>
                                    <label class="form-label col-lg-2 d-flex align-items-center px-1">£ @Model.Organisation.ClientSpendOverLast12Months.GetValueOrDefault().ToString("N2")</label>

                                    <label class="form-label col-lg-3 d-flex align-items-center">Invoiced margin % over the last 3 months</label>
                                    <label class="form-label col-lg-2 d-flex align-items-center">@Model.Organisation.InvoicedMarginOverLast3Months.GetValueOrDefault().ToString("N2") %</label>

                                    <label class="form-label col-lg-4 d-flex align-items-center">Date of first paid job</label>
                                    <label class="form-label col-lg-3 d-flex align-items-center">@Model.Organisation.FirstPaidJobDate.GetValueOrDefault().ToString("dd MMMM yyyy")</label>
                                </div>
                                <div class="form-group-row d-flex flex-row-reverse">
                                    @if (Model.Organisation.DeletedDate == null && Model.salesAndMarketingButton == true)
                                    {
                                        <button class="@(Settings.Theme.IconPrefix) btn btn-outline-default" type="submit" title="Save"><i class="far fa-cloud-upload fa-2x color-black"></i></button>
                                    }
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            @*Chargeable software subscriptions*@
            <div class="panel" data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <i class="fal fa-money-check-alt fa-2x color-black"></i> &nbsp; &nbsp;
                    <h2>
                        Chargeable software subscriptions
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <div class="container">
                            <form id="@Model.chargeableSoftwareSection">
                                <div class="form-group row">
                                    <label class="form-label col-sm">Allow in-house translation</label>
                                    <div class="custom-control custom-switch col-sm-3">
                                        <input asp-for="@Model.Organisation.AllowInHouseTranslation" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.AllowInHouseTranslation)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.AllowInHouseTranslation)">Allow</label>
                                    </div>
                                    @{
                                        string? trialSelected = Model.Organisation.TranslateonlineStatus == "Trial" ? "selected" : null;
                                        string? onetofiveSelected = Model.Organisation.TranslateonlineStatus == "1-5" ? "selected" : null;
                                        string? sixtotwentySelected = Model.Organisation.TranslateonlineStatus == "6-20" ? "selected" : null;
                                        string? twentyonetofiftySelected = Model.Organisation.TranslateonlineStatus == "21-50" ? "selected" : null;
                                        string? fiftyoneSelected = Model.Organisation.TranslateonlineStatus == "51+" ? "selected" : null;
                                    }
                                    <select id="translation-choice" class="col-sm-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @if (Model.Organisation.TranslateonlineStatus == null)
                                        {
                                            <option Value="" selected="selected"></option>
                                        }
                                        <option Value="Trial" selected="@trialSelected">Trial</option>
                                        <option Value="1-5" selected="@onetofiveSelected">1-5</option>
                                        <option Value="6-20" selected="@sixtotwentySelected">6-20</option>
                                        <option Value="21-50" selected="@twentyonetofiftySelected">21-50</option>
                                        <option Value="51+" selected="@fiftyoneSelected">51+</option>
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm">Allow access to design plus</label>
                                    <div class="custom-control custom-switch col-sm-3">
                                        <input asp-for="@Model.Organisation.DesignPlusAccessEnabled" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.DesignPlusAccessEnabled)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.DesignPlusAccessEnabled)">Allow</label>
                                    </div>
                                    @{
                                        string? designPlustrialSelected = Model.Organisation.DesignplusStatus == "Trial" ? "selected" : null;
                                        string? designPlusonetofiveSelected = Model.Organisation.DesignplusStatus == "1-5" ? "selected" : null;
                                        string? designPlussixtotwentySelected = Model.Organisation.DesignplusStatus == "6-20" ? "selected" : null;
                                        string? designPlustwentyonetofiftySelected = Model.Organisation.DesignplusStatus == "21-50" ? "selected" : null;
                                        string? designPlusfiftyonetohundredSelected = Model.Organisation.DesignplusStatus == "51-100" ? "selected" : null;
                                        string? designPlushundredSelected = Model.Organisation.DesignplusStatus == "100+" ? "selected" : null;
                                    }
                                    <select id="designPlus-choice" class="col-sm-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @if (Model.Organisation.DesignplusStatus == null)
                                        {
                                            <option Value="" selected="selected"></option>
                                        }
                                        <option Value="Trial" selected="@designPlustrialSelected">Trial</option>
                                        <option Value="1-5" selected="@designPlusonetofiveSelected">1-5</option>
                                        <option Value="6-20" selected="@designPlussixtotwentySelected">6-20</option>
                                        <option Value="21-50" selected="@designPlustwentyonetofiftySelected">21-50</option>
                                        <option Value="51-100" selected="@designPlusfiftyonetohundredSelected">51-100</option>
                                        <option Value="100+" selected="@designPlushundredSelected">100+</option>
                                    </select>
                                </div>
                                <div class="form-group-row d-flex flex-row-reverse">
                                    @if (Model.Organisation.DeletedDate == null && Model.chargeableSoftwareButton == true)
                                    {
                                        <button class="@(Settings.Theme.IconPrefix) btn btn-outline-default" type="submit" title="Save"><i class="far fa-cloud-upload fa-2x color-black"></i></button>
                                    }
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            @*Quoting & Invoicing*@
            <div class="panel" data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <i class="fal fa-file-invoice-dollar fa-2x color-black"></i> &nbsp; &nbsp;
                    <h2>
                        Quoting & Invoicing
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <div class="container">
                            <form id="@Model.quotingAndInvoicingSection">
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Organisation name</label>
                                    <input asp-for="@Model.Organisation.InvoiceOrgName" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-3 d-flex align-items-center">Address</label>
                                    <input asp-for="@(Model.Organisation.InvoiceAddress1)" type="text" id="example-input-material" class="col-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Address1">
                                    <label class="col-1"></label>
                                    <input asp-for="@(Model.Organisation.InvoiceAddress2)" type="text" id="example-input-material" class="col-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Address2">
                                    <label class="col-3"></label>
                                    <input asp-for="@(Model.Organisation.InvoiceAddress3)" type="text" id="example-input-material" class="col-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Address3">
                                    <label class="col-1"></label>
                                    <input asp-for="@(Model.Organisation.InvoiceAddress4)" type="text" id="example-input-material" class="col-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="Address4">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">County/State</label>
                                    <input asp-for="@Model.Organisation.InvoiceCountyOrState" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Country</label>
                                    <select name="@nameof(Model.Organisation.InvoiceCountryId)" class="col-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @foreach (var country in Model.Countries)
                                        {
                                            @if (Model.Organisation.InvoiceCountryId == country.Id)
                                            {
                                                <option value="@country.Id" selected="selected">@country.CountryName</option>
                                            }
                                            else
                                            {
                                                <option value="@country.Id">@country.CountryName</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Postcode/Zip</label>
                                    <input asp-for="@Model.Organisation.InvoicePostcodeOrZip" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Default invoicing contact</label>
                                    <select name="@nameof(Model.Organisation.InvoiceDefaultContactId)" class=" col-sm-9 form-control form-control-sm select2" placeholder="">
                                        <optgroup label="Whoever ordered the work">
                                            <option value="0">Whoever ordered the work</option>
                                        </optgroup>
                                        @foreach (var group in Model.Organisation.DefaultInvoiceContacts.ToList().GroupBy(x => x.OrgName).OrderBy(x => x.Key))
                                        {
                                            <optgroup label="@group.Key">
                                                @foreach (var contact in group)
                                                {
                                                    if (Model.Organisation.InvoiceDefaultContactId == contact.Id)
                                                    {
                                                        <option value="@contact.Id" selected="selected">@contact.Name</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@contact.Id">@contact.Name</option>
                                                    }
                                                }
                                            </optgroup>
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Second invoicing contact</label>
                                    <select name="@nameof(Model.Organisation.InvoiceDefaultSecondContactId)" class=" col-sm-9 form-control form-control-sm select2" placeholder="">
                                        <optgroup label="Whoever ordered the work">
                                            <option value="-1">None</option>
                                            <option value="0">Whoever ordered the work</option>
                                        </optgroup>
                                        @foreach (var group in Model.Organisation.DefaultInvoiceContacts.ToList().GroupBy(x => x.OrgName).OrderBy(x => x.Key))
                                        {
                                            //var selected = Model.Organisation.InvoiceDefaultContactId == 0 ? true : false;
                                            <optgroup label="@group.Key">
                                                @foreach (var contact in group)
                                                {
                                                    if (Model.Organisation.InvoiceDefaultSecondContactId == contact.Id)
                                                    {
                                                        <option value="@contact.Id" selected="selected">@contact.Name</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@contact.Id">@contact.Name</option>
                                                    }
                                                }
                                            </optgroup>
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Default currency</label>
                                    <select name="@nameof(Model.Organisation.InvoiceCurrencyId)" class="col-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @foreach (var currency in Model.Currencies)
                                        {
                                            if (Model.Organisation.InvoiceCurrencyId == currency.Id)
                                            {
                                                <option value="@currency.Id" selected>@currency.Symbol</option>
                                            }
                                            else
                                            {
                                                <option value="@currency.Id">@currency.Symbol</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Default language</label>
                                    <select name="@nameof(Model.Organisation.InvoiceLangIanacode)" class="col-4 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @*Hard-coded list since list of languages supported for invoicing is minimal*@
                                        @{
                                            var IanaCode = Model.Organisation.InvoiceLangIanacode;
                                        }
                                        <option value="0">(None)</option>
                                        @if (IanaCode == "da")
                                        {
                                            <option value="da" selected>Danish</option>
                                        }
                                        else
                                        {
                                            <option value="da">Danish</option>
                                        }
                                        @if (IanaCode == "en")
                                        {
                                            <option value="en" selected>English</option>
                                        }
                                        else
                                        {
                                            <option value="en">English</option>
                                        }
                                        @if (IanaCode == "de")
                                        {
                                            <option value="de" selected>German</option>
                                        }
                                        else
                                        {
                                            <option value="de">German</option>
                                        }
                                        @if (IanaCode == "sv")
                                        {
                                            <option value="sv" selected>Swedish</option>
                                        }
                                        else
                                        {
                                            <option value="sv">Swedish</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Blanket PO number</label>
                                    <input asp-for="@Model.Organisation.InvoiceBlanketPonumber" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-3 d-flex align-items-center">Payment terms</label>
                                    <div class="custom-control custom-switch col-5">
                                        <input asp-for="@Model.Organisation.PaymentDaysAreFromEndOfMonth" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.PaymentDaysAreFromEndOfMonth)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.PaymentDaysAreFromEndOfMonth)">120(+1) days from the end of month</label>
                                    </div>

                                    <label class="form-label col-1"></label>
                                    <input asp-for="@Model.Organisation.InvoicePaymentTermDays" type="number" class="col-1 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent">
                                    <label class="form-label col-1 d-flex align-items-center">days</label>

                                    <label class="form-label col-sm-3"></label>
                                    <div class="custom-control custom-switch col-4">
                                        <input type="radio" class="custom-control-input" id="invoiceDate" value="false" name="@(nameof(Model.Organisation.PaymentDaysAreFromEndOfMonth) + ".radio")">
                                        <label class="custom-control-label" for="invoiceDate">from date of invoice</label>
                                    </div>

                                    <label class="form-label col-1"></label>
                                    <div class="custom-control custom-switch col-4">
                                        <input type="radio" class="custom-control-input" id="endMonth" value="false" name="@(nameof(Model.Organisation.PaymentDaysAreFromEndOfMonth) + ".radio")">
                                        <label class="custom-control-label" for="endMonth">net (from end of month)</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Early invoicing</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.AllowEarlyClientInvoicing" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.AllowEarlyClientInvoicing)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.AllowEarlyClientInvoicing)">Enable for early invoicing</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Early payment discount</label>
                                    <input asp-for="@Model.Organisation.EarlyPaymentDiscount" type="number" max="99" min="0" id="example-input-material" class="col-1 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="20">
                                    <label class="form-label col-sm-3 d-flex align-items-center"> %</label>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">PO policy</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.PonumbersRequiredForGoAheads" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.PonumbersRequiredForGoAheads)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.PonumbersRequiredForGoAheads)">Purchase order numbers are required for go-aheads</label>
                                    </div>
                                    <label class="form-label col-sm-3 d-flex align-items-center"></label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.PonumbersRequiredForInvoicing" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.PonumbersRequiredForInvoicing)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.PonumbersRequiredForInvoicing)">Purchase order numbers are required to invoice jobs</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Late fees</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.AllowLateFees" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.AllowLateFees)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.AllowLateFees)">Apply late fees on overdue invoices</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Automatic invoice creation</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.InvoicingAutoCreateAndSendInvoices" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.InvoicingAutoCreateAndSendInvoices)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.InvoicingAutoCreateAndSendInvoices)">Automatically generate and send invoices</label>
                                    </div>
                                </div>
                                <div class="form-group row" id="autoReasonOff" style="display:none;">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Reason for switching off auto invoicing</label>
                                    <textarea type="text" id="autoReasonOffText" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent"></textarea>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Automatic invoice chasing</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        @Html.CheckBox(nameof(Model.Organisation.InvoicingAutoChaseOverdueContacts), Model.Organisation.InvoicingAutoChaseOverdueContacts ?? false, new { Class = "custom-control-input", id = nameof(Model.Organisation.InvoicingAutoChaseOverdueContacts) })
                                        @*<input asp-for="@(Model.Organisation.InvoicingAutoChaseOverdueContacts ?? false)" type="checkbox" class="custom-control-input" id="customSwitch1">*@
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.InvoicingAutoChaseOverdueContacts)">Automatically send reminder e-mails for overdue invoices</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">VAT number</label>
                                    <input asp-for="@Model.Organisation.Vatnumber" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Company registration number</label>
                                    <input asp-for="@Model.Organisation.CompanyRegistrationNumber" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Tax Identification number</label>
                                    <input asp-for="@Model.Organisation.Tinnumber" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">HFM Code BS</label>
                                    <input asp-for="@Model.Organisation.HfmcodeBs" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">HFM Code IS</label>
                                    <input asp-for="@Model.Organisation.HfmcodeIs" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Default quote approval reason</label>
                                    <select name="@nameof(Model.Organisation.DefaultQuoteApprovalReason)" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                        @foreach (var reason in Model.DecisionReasons)
                                        {
                                            if (@Model.Organisation.DefaultQuoteApprovalReason == reason.Id)
                                            {
                                                <option value="@reason.Id" selected>@reason.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@reason.Id">@reason.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Enquiry SLA</label>
                                    <input asp-for="@(Model.Organisation.OrgSLA)" type="number" id="example-input-material" class="col-sm-4 form-control form-control-sm rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="hour(s)">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Automated quote creation</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        @Html.CheckBox(nameof(Model.Organisation.EnabledForAutoQuoteGeneration), Model.Organisation.EnabledForAutoQuoteGeneration ?? false, new { Class = "custom-control-input", id = nameof(Model.Organisation.EnabledForAutoQuoteGeneration) })
                                        @*<input asp-for="@(Model.Organisation.EnabledForAutoQuoteGeneration ?? false)" type="checkbox" class="custom-control-input" id="customSwitch1">*@
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.EnabledForAutoQuoteGeneration)">Enable auto quote set up for this organisation</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">SAP master data reference number</label>
                                    <input asp-for="@Model.Organisation.SapmasterDataReferenceNumber" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Custom field 1</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input asp-for="@Model.Organisation.ShowCustomField1" type="checkbox" class="custom-control-input" id="@nameof(Model.Organisation.ShowCustomField1)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ShowCustomField1)">Show Custom Field 1 in order status</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Custom field 2</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input type="checkbox" class="custom-control-input" asp-for="@Model.Organisation.ShowCustomField2" id="@nameof(Model.Organisation.ShowCustomField2)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ShowCustomField2)">Show Custom Field 2 in order status</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Custom field 3</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        <input type="checkbox" class="custom-control-input" asp-for="@Model.Organisation.ShowCustomField3" id="@nameof(Model.Organisation.ShowCustomField3)">
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ShowCustomField3)">Show Custom Field 3 in order status</label>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Custom field 4</label>
                                    <div class="custom-control custom-switch col-sm-9">
                                        @Html.CheckBox(nameof(Model.Organisation.ShowCustomField4), Model.Organisation.ShowCustomField4 ?? false, new { Class = "custom-control-input", id = nameof(Model.Organisation.ShowCustomField4) })
                                        @*<input type="checkbox" class="custom-control-input" asp-for="@Model.Organisation.ShowCustomField4" id="@nameof(Model.Organisation.ShowCustomField4)">*@
                                        <label class="custom-control-label" for="@nameof(Model.Organisation.ShowCustomField4)">Show Custom Field 4 in order status</label>
                                    </div>
                                </div>
                                <div class="form-group-row d-flex flex-row-reverse">
                                    @if (Model.Organisation.DeletedDate == null && Model.quotingAndInvoicingButton == true)
                                    {
                                        <button class="@(Settings.Theme.IconPrefix) btn btn-outline-default" type="submit" title="Save"><i class="far fa-cloud-upload fa-2x color-black"></i></button>
                                    }
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            @*LionBox File Share*@
            <div class="panel" data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <i class="fal fa-share-square fa-2x color-black"></i> &nbsp; &nbsp;
                    <h2>
                        LionBox File Share
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <div class="container">
                            <form id="@Model.lionBoxSection">
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Client use only</label>
                                    <input asp-for="@Model.Organisation.ClientLionBoxLink" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="https://lion.app.box.com/folder/123456">
                                </div>
                                <div class="form-group row">
                                    <label class="form-label col-sm-3 d-flex align-items-center">Supplier use only</label>
                                    <input asp-for="@Model.Organisation.SupplierLionBoxLink" type="text" id="example-input-material" class="col-sm-9 form-control form-control-md rounded-0 border-top-0 border-left-0 border-right-0 px-0 bg-transparent" placeholder="https://lion.app.box.com/folder/123">
                                </div>
                                <div class="form-group-row d-flex flex-row-reverse">
                                    @if (Model.Organisation.DeletedDate == null && Model.lionBoxButton == true)
                                    {
                                        <button class="@(Settings.Theme.IconPrefix) btn btn-outline-default" type="submit" title="Save"><i class="far fa-cloud-upload fa-2x color-black"></i></button>
                                    }
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel" data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <i class="fal fa-file-invoice-dollar fa-2x color-black"></i> &nbsp; &nbsp;
                    <h2>
                        flow plus - licencing
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <div class="container" style="margin-right:0px;margin-left:0px;overflow-x:auto;padding-left:0px;padding-right:0px;max-width:1500px;">
                            @await Component.InvokeAsync("flowPlusLicencing", new { orgOrGroupId = Model.Organisation.Id, typeId = 2 })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">

        <div class="col-lg-12">
            @*Ownerships*@
            <div class="panel panel-locked" data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <h2>
                        <i class="fal fa-poll-people fa-2x color-black"></i> &nbsp; &nbsp;
                        Ownerships
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <div class="container">
                            <div class="row justify-content-center">
                                <div class="col-12 mb-3 d-flex justify-content-center">
                                    <a href="@("http://myplus/EmployeeOwnership.aspx?Mode=Add&DataObjectTypeID=2&DataObjectID=" + Model.Organisation.Id)" target="_blank">
                                        <i class="fal fa-user-plus fa-2x color-black"></i>
                                        @*Add an owner for this organisation*@
                                    </a>
                                </div>
                                @foreach (var ownership in Model.Organisation.AllOwnerships)
                                {
                                    <div class="col-lg-3">
                                        <div class="card rounded-top">
                                            <div class="row no-gutters row-grid">
                                                <div class="col-12">
                                                    <div class="d-flex flex-column align-items-center justify-content-center p-1">
                                                        <img src="@ownership.ProfilePicture" class="rounded-circle shadow-2 img-thumbnail" style="height: 4.5rem;" alt="Profile image">
                                                        <h5 class="mb-0 fw-700 text-center mt-1">
                                                            @ownership.EmployeeName
                                                            <small class="text-muted mb-0">@ownership.EmployeeJobTitle</small>
                                                        </h5>
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="text-center py-1">
                                                        <h5 class="mb-0 fw-700">
                                                            Type
                                                            <small class="text-muted mb-0">@ownership.OwnershipType</small>
                                                        </h5>
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="text-center py-1">
                                                        <h5 class="mb-0 fw-700">
                                                            Since
                                                            <small class="text-muted mb-0">@ownership.InForceSince.ToString("dd MMMM yyyy")</small>
                                                        </h5>
                                                    </div>
                                                </div>
                                                <div class="col-12">
                                                    <div class="p-2 text-center">
                                                        <a href="@("http://myplus/EmployeeOwnership.aspx?EmployeeOwnershipID=" + ownership.OwnershipId + "&Mode=Change")" class="btn-link font-weight-bold" target="_blank">Edit</a> <span class="text-primary d-inline-block mx-3">&#9679;</span>
                                                        <a href="@("http://myplus/EmployeeOwnership.aspx?EmployeeOwnershipID=" + ownership.OwnershipId + "&Mode=Delete")" class="btn-link font-weight-bold" target="_blank">Delete</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            @*Action Centre*@
            <div class="panel panel-locked" data-panel-lock="false" data-panel-close="false" data-panel-fullscreen="false" data-panel-collapsed="true" data-panel-color="false" data-panel-locked="false" data-panel-refresh="false" data-panel-reset="false">
                <div class="panel-hdr">
                    <h2>
                        Action Centre
                    </h2>
                </div>
                <div class="panel-hdr">
                    <div class="panel-toolbar pr-3 align-self-end">
                        <ul id="demo_panel-tabs" class="nav nav-tabs border-bottom-0 nav-tabs-clean" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#tab_default-1" role="tab"><i class="fal fa-ballot-check fa-1x"></i>&nbsp;Reports</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link active" data-toggle="tab" href="#tab_default-2" role="tab"><i class="fal fa-cogs fa-1x"></i>&nbsp;Management</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#tab_default-3" role="tab"><i class="fal fa-child fa-1x"></i>&nbsp;Pricelists</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#tab_default-4" role="tab"><i class="fal fa-ballot-check fa-1x"></i>&nbsp;Client review management</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#tab_default-5" role="tab"><i class="fal fa-money-bill-wave fa-1x"></i>&nbsp;Invoicing</a>
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="tab-content p-3">
                    <div class="tab-pane fade show" id="tab_default-1" role="tabpanel">
                        <div class="row justify-content-center">
                            <div class="col-md col-lg-2 justify-content-center align-items-center">
                                <div class="rounded bg-white p-0 m-0 d-flex flex-column w-100 h-100">
                                    <a target="_blank" href='@string.Format("http://myplus/ClientStatusReportGeneric.aspx?OrgID={0}", @Model.Organisation.Id)' class="btn">
                                        <div class="rounded-top w-100 bg-danger-50">
                                            <div class="rounded-top d-flex align-items-center justify-content-center w-100 pt-3 pb-3 pr-2 pl-2 hover-bg">
                                                <span class="icon-stack fa-6x">
                                                    <i class="base base-7 icon-stack-3x opacity-100 color-success-600" style="color: #af37ff !important"></i>
                                                    <i class="base base-7 icon-stack-2x opacity-100 color-success-700" style="color: #b951ff !important"></i>
                                                    <i class="ni ni-list icon-stack-1x opacity-100 text-white"></i>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="rounded-bottom p-1 w-100 d-flex justify-content-center align-items-center text-center">
                                            <span class="d-block text-truncate text-muted">Client status report</span>
                                        </div>
                                    </a>
                                </div>
                            </div>

                            <div class="col-md col-lg-2 justify-content-center align-items-center">
                                <div class="rounded bg-white p-0 m-0 d-flex flex-column w-100 h-100">
                                    <a href='@string.Format("http://myplus/PunctualityReport.aspx?OrgID={0}", @Model.Organisation.Id)' target="_blank" class="btn">
                                        <div class="rounded-top w-100 bg-danger-50">
                                            <div class="rounded-top d-flex align-items-center justify-content-center w-100 pt-3 pb-3 pr-2 pl-2 hover-bg">
                                                <span class="icon-stack fa-6x">
                                                    <i class="base-7 icon-stack-3x color-primary-500" style="color: #af37ff !important"></i>
                                                    <i class="base-7 icon-stack-2x color-primary-500" style="color: #b951ff !important"></i>
                                                    <i class="ni ni-clock color-primary-500 icon-stack-1x text-white"></i>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="rounded-bottom p-1 w-100 d-flex justify-content-center align-items-center text-center">
                                            <span class="d-block text-truncate text-muted">Punctuality report</span>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade show active" id="tab_default-2" role="tabpanel">
                        <div class="row justify-content-center">
                            <div class="col-md col-lg-2 justify-content-center align-items-center">
                                <div class="rounded bg-white p-0 m-0 d-flex flex-column w-100 h-100">
                                    <a href="@(string.Format("http://myplus/AddSingleTask.aspx?DataObjectTypeID=2&DataObjectID={0}", Model.Organisation.Id))" target="_blank" class="btn">
                                        <div class="rounded-top w-100 bg-success-50">
                                            <div class="rounded-top d-flex align-items-center justify-content-center w-100 pt-3 pb-3 pr-2 pl-2 hover-bg">
                                                <div class='icon-stack fa-6x'>
                                                    <i class="base base-7 icon-stack-3x opacity-100 color-success-900"></i> <i class="base base-7 icon-stack-2x opacity-100 color-success-500"></i> <i class="fal fa-tasks icon-stack-1x opacity-100 color-white"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="rounded-bottom p-1 w-100 d-flex justify-content-center align-items-center text-center">
                                            <span class="d-block text-truncate text-muted">Add Task</span>
                                        </div>
                                    </a>
                                </div>
                            </div>
                            @{var ownerId = Model.LoggedInEmployee.Department.Id == ((byte)Global_Settings.Enumerations.Departments.SalesAndMarketing) ? Model.LoggedInEmployee.Id : 9;}
                            <div class="col-md col-lg-2 justify-content-center align-items-center">
                                <div class="rounded bg-white p-0 m-0 d-flex flex-column w-100 h-100">
                                    <a href="@(string.Format("http://myplus/SalesHotListEntryAddOrRemove.aspx?Mode=Add&AppliesToDataObjectTypeID=2&AppliesToDataObjectID={0}&OwnerEmployeeID={1}", Model.Organisation.Id, ownerId))" target="_blank" class="btn">
                                        <div class="rounded-top w-100 bg-success-50">
                                            <div class="rounded-top d-flex align-items-center justify-content-center w-100 pt-3 pb-3 pr-2 pl-2 hover-bg">
                                                <div class='icon-stack fa-6x'>
                                                    <i class="base base-7 icon-stack-3x opacity-100 color-success-900"></i> <i class="base base-7 icon-stack-2x opacity-100 color-success-500"></i> <i class="fal fa-pepper-hot icon-stack-1x opacity-100 color-white"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="rounded-bottom p-1 w-100 d-flex justify-content-center align-items-center text-center">
                                            <span class="d-block text-truncate text-muted">Add to sales hot list</span>
                                        </div>
                                    </a>
                                </div>
                            </div>
                            @if (@Model.Organisation.DeletedDate == null)
                            {
                                <div class="col-md col-lg-2 justify-content-center align-items-center">
                                    <div class="rounded bg-white p-0 m-0 d-flex flex-column w-100 h-100">
                                        <a target="_blank" href="@("http://myplus/ConfirmOrgDeletion.aspx?OrgID=" + Model.Organisation.Id)" class="btn">
                                            <div class="rounded-top w-100 bg-danger-50">
                                                <div class="rounded-top d-flex align-items-center justify-content-center w-100 pt-3 pb-3 pr-2 pl-2 hover-bg">
                                                    <span class="icon-stack fa-6x">
                                                        <i class="base-2 icon-stack-3x color-danger-600"></i>
                                                        <i class="base-3 icon-stack-2x color-danger-700"></i>
                                                        <i class="fal fa-trash-alt icon-stack-1x text-white"></i>
                                                        @*<i class="ni ni-settings icon-stack-1x text-white"></i>*@
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="rounded-bottom p-1 w-100 d-flex justify-content-center align-items-center text-center">
                                                <span class="d-block text-truncate text-muted">Delete</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="tab-pane fade" id="tab_default-3" role="tabpanel">
                        <div class="row justify-content-center">
                            <div class="col col-lg-2 justify-content-center align-items-center">
                                <div class="rounded bg-white p-0 m-0 d-flex flex-column w-100 h-100">
                                    <a href="@(Html.Raw(Model.Organisation.NetworkPriceListInfoDirectoryPathForApp))" class="btn">
                                        <div class="rounded-top w-100 bg-info-50">
                                            <div class="rounded-top d-flex align-items-center justify-content-center w-100 pt-3 pb-3 pr-2 pl-2 hover-bg">
                                                <div class='icon-stack fa-6x'>
                                                    <i class="base base-7 icon-stack-3x opacity-100 color-info-300"></i> <i class="base base-7 icon-stack-2x opacity-100 color-info-50"></i> <i class="fal fa-folder-open icon-stack-1x opacity-100 color-white"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="rounded-bottom p-1 w-100 d-flex justify-content-center align-items-center text-center">
                                            <span class="d-block text-truncate text-muted">Open info folder</span>
                                        </div>
                                    </a>
                                </div>
                            </div>
                            <div class="col col-lg-2 justify-content-center align-items-center">
                                <div class="rounded bg-white p-0 m-0 d-flex flex-column w-100 h-100">
                                    <a href="@("http://myplus/PriceListAutomationManagement.aspx?OrgGroupID=" + Model.Organisation.OrgGroupId)" class="btn">
                                        <div class="rounded-top w-100 bg-warning-50">
                                            <div class="rounded-top d-flex align-items-center justify-content-center w-100 pt-3 pb-3 pr-2 pl-2 hover-bg">
                                                <div class='icon-stack fa-6x'>
                                                    <i class="base base-4 icon-stack-3x opacity-100 color-warning-900"></i> <i class="base base-4 icon-stack-2x opacity-100 color-warning-600"></i> <i class="fal fa-edit icon-stack-1x opacity-100 color-white"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="rounded-bottom p-1 w-100 d-flex justify-content-center align-items-center text-center">
                                            <span class="d-block text-truncate text-muted">Edit automation</span>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="tab_default-4" role="tabpanel">
                        <div class="row justify-content-center">
                            <div class="col col-lg-2 justify-content-center align-items-center">
                                <div class="rounded bg-white p-0 m-0 d-flex flex-column w-100 h-100">
                                    <a href="@("http://myplus/ReviewerReminder.aspx?OrgID=" + Model.Organisation.Id)" target="_blank" class="btn">
                                        <div class="rounded-top w-100 bg-danger-50">
                                            <div class="rounded-top d-flex align-items-center justify-content-center w-100 pt-3 pb-3 pr-2 pl-2 hover-bg">
                                                <div class='icon-stack fa-6x'>
                                                    <i class="base base-14 icon-stack-3x opacity-100 color-danger-600"></i> <i class="base base-14 icon-stack-2x opacity-100 color-danger-300"></i> <i class="fal fa-alarm-exclamation icon-stack-1x opacity-100 color-white"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="rounded-bottom p-1 w-100 d-flex justify-content-center align-items-center text-center">
                                            <span class="d-block text-truncate text-muted">Reminder settings</span>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="tab_default-5" role="tabpanel">
                        <div class="row justify-content-center">
                            <div class="col col-lg-2 justify-content-center align-items-center">
                                <div class="rounded bg-white p-0 m-0 d-flex flex-column w-100 h-100">
                                    <a href=@("http://myplus/AutoClientInvoicing.aspx?ID=" + Model.Organisation.AutoClientInvoicingSettingsId) target="_blank" class="btn">
                                        <div class="rounded-top w-100 bg-warning-50">
                                            <div class="rounded-top d-flex align-items-center justify-content-center w-100 pt-3 pb-3 pr-2 pl-2 hover-bg">
                                                <div class='icon-stack fa-6x'>
                                                    <i class="base base-14 icon-stack-3x opacity-100 color-warning-800"></i> <i class="base base-5 icon-stack-2x opacity-100 color-warning-200"></i> <i class="fal fa-file-invoice-dollar icon-stack-1x opacity-100 color-white"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="rounded-bottom p-1 w-100 d-flex justify-content-center align-items-center text-center">
                                            <span class="d-block text-truncate text-muted">Auto client invoicing settings</span>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            @*Job orders*@
            <div class="panel panel-locked" data-panel-locked data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <h2>
                        Job orders
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        @*<component type="typeof(AllJobOrdersComponent)" render-mode="ServerPrerendered" param-DataObjectId="@Model.Organisation.Id" param-DataTypeId="@(((int)Global_Settings.Enumerations.DataObjectTypes.Org))" />*@
                        @*@(await Html.RenderComponentAsync<AllJobOrdersComponent>(RenderMode.ServerPrerendered, new {DataObjectId = Model.Organisation.Id, DataTypeId=((int)Global_Settings.Enumerations.DataObjectTypes.Org)}))*@
                        @*<component type="typeof(SmartAdmin.WebUI.Pages.HelloWorld)" render-mode="ServerPrerendered"></component>*@
                        <div>
                            <table id="dt-all-orders-component" class="table-sm table table-bordered table-hover table-striped w-100">
                                <thead class="bg-tp-red">
                                    <tr>
                                        <th>Job ID</th>
                                        <th>Enquiry ID</th>
                                        <th>Job</th>
                                        <th>Contact</th>
                                        <th>Source</th>
                                        <th>Target</th>
                                        <th>Status</th>
                                        <th>Submission date</th>
                                        <th>Delivery deadline</th>
                                        <th>Margin</th>
                                        <th>Client costs</th>
                                        <th>Supplier costs</th>
                                        <th>Completion date</th>
                                    </tr>
                                </thead>

                                @*<tfoot>
                                        <tr>
                                            <th>Job ID</th>
                                            <th>Enquiry ID</th>
                                            <th>Job</th>
                                        </tr>
                                    </tfoot>*@
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            @*Enquiries*@
            <div class="panel panel-locked" data-panel-locked data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <h2>
                        Enquiries
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <table id="dt-all-enquiries-component" class="table-sm table table-bordered table-hover table-striped w-100">
                            <thead class="bg-tp-red">
                                <tr>
                                    <th>Enquiry ID</th>
                                    <th>Name</th>
                                    <th>Status</th>
                                    <th>Source</th>
                                    <th>Target</th>
                                    <th>Decision Reason</th>
                                    <th>Value</th>
                                    <th>Deadline</th>
                                    <th>Created</th>
                                    <th>Last Modified</th>
                                    <th>Created By Employee</th>
                                    <th>Sales Contact</th>
                                </tr>
                            </thead>

                            @*<tfoot>
                                    <tr>
                                        <th>Job ID</th>
                                        <th>Enquiry ID</th>
                                        <th>Job</th>
                                        <th>Contact</th>
                                        <th>Source</th>
                                        <th>Target</th>
                                        <th>Status</th>
                                        <th>Submission date</th>
                                        <th>Delivery deadline</th>
                                        <th>Margin</th>
                                        <th>Client costs</th>
                                    </tr>
                                </tfoot>*@
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            @*Contacts*@
            <div class="panel panel-locked" data-panel-locked data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <h2>
                        Contacts
                        @if (Model.AllowedToAddContact == true)
                        {
                            <a href="@("http://myplus/Contact.aspx?Mode=Add&OrgID=" + Model.Organisation.Id)" target="_blank" class="btn p-1"><i class="fad fa-plus-circle d-flex align-items-center" style="--fa-primary-color: white; --fa-secondary-color: green; font-size: 18px;" data-toggle="popover" data-trigger="hover" data-placement="top" title="" data-html="true" data-content="Add Contact"></i></a>
                        }
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <table id="dt-all-contacts" class="table-sm table table-bordered table-hover table-striped w-100">
                            <thead class="bg-tp-red">
                                <tr>
                                    <th>Contact ID</th>
                                    <th>Name</th>
                                    <th>Job Title</th>
                                    <th>Department</th>
                                    <th>Landline</th>
                                    <th>Mobile</th>
                                    <th>Email</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>Contact ID</th>
                                    <th>Name</th>
                                    <th>Job Title</th>
                                    <th>Department</th>
                                    <th>Landline</th>
                                    <th>Mobile</th>
                                    <th>Email</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            @*Price Lists*@
            <div class="panel panel-locked" data-panel-locked data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <h2>
                        Price Lists
                        @if (Model.isAllowedToAddPriceList == true)
                        {
                            <a href="@("http://myplus/ClientPriceList.aspx?Mode=Add&DataObjectTypeID=2&DataObjectID=" + Model.Organisation.Id)" target="_blank" class="btn p-1"><i class="fad fa-plus-circle d-flex align-items-center" style="--fa-primary-color: white; --fa-secondary-color: green; font-size: 18px;" data-toggle="popover" data-trigger="hover" data-placement="top" title="" data-html="true" data-content="Add Price List"></i></a>
                        }
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <table id="dt-all-price-lists" class="table-sm table table-bordered table-hover table-striped w-100">
                            <thead class="bg-tp-red">
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Currency</th>
                                    <th>In force sice</th>
                                    <th>Applies to</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Currency</th>
                                    <th>In force sice</th>
                                    <th>Applies to</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            @*Quote Templates*@
            <div class="panel panel-locked" data-panel-locked data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <h2>
                        Quote Templates
                        @if (Model.isAllowedToAddPriceList == true)
                        {
                            <a href="@("http://myplus/QuoteTemplate.aspx?Mode=Add&DataObjectTypeID=2&DataObjectID=" + Model.Organisation.Id)" target="_blank" class="btn p-1"><i class="fad fa-plus-circle d-flex align-items-center" style="--fa-primary-color: white; --fa-secondary-color: green; font-size: 18px;" data-toggle="popover" data-trigger="hover" data-placement="top" title="" data-html="true" data-content="Add Quote Template"></i></a>
                        }
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <table id="dt-quote-templates" class="table-sm table table-bordered table-hover table-striped w-100">
                            <thead class="bg-tp-red">
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Language</th>
                                    <th>Status</th>
                                    <th>Created</th>
                                    <th>Last Modified</th>
                                    <th>Created by</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Language</th>
                                    <th>Status</th>
                                    <th>Created</th>
                                    <th>Last Modified</th>
                                    <th>Created by</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            @*Documents shared via i plus*@
            <div class="panel panel-locked" data-panel-locked data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <h2>
                        Documents shared via i plus
                        @if (Model.generalInfoButton == true)
                        {
                            <a href="@("http://myplus/ExtranetUploadSharedDoc.aspx?DataObjectTypeID=2&DataObjectID=" + Model.Organisation.Id)" target="_blank" class="btn p-1"><i class="fad fa-plus-circle d-flex align-items-center" style="--fa-primary-color: white; --fa-secondary-color: green; font-size: 18px;" data-toggle="popover" data-trigger="hover" data-placement="top" title="" data-html="true" data-content="Add Document"></i></a>
                        }
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <p>
                            The following files will be visible to <b>all contacts</b> at this organisation
                            who have been enabled for <b>i plus</b> access. To share a file with only an
                            individual contact, navigate to the contact&#39;s <b>i plus</b> settings page
                            first.
                        </p>
                        <p>
                            If the size of the file you need to upload is bigger than 30MB, please contact
                            <a href="mailto:ITSupport@translateplus.com">IT Support</a>,
                            but first, consider whether the file needs to be so large (for example, in the case
                            of a scanned PDF, perhaps the colour or resolution settings are too high, which
                            can be altered after scanning using the full version of Adobe Acrobat Pro).
                        </p>
                        <p class="text-success"><i class="fal fa-info-circle"></i>  After deleting a file it cannot be recovered, so ensure you keep original copies.</p>
                        <table id="dt-iplus-docs" class="table-sm table table-bordered table-hover table-striped w-100">
                            <thead class="bg-tp-red">
                                <tr>
                                    <th>File Name</th>
                                    <th>Notes</th>
                                    <th>File size</th>
                                    <th>Last Modified</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>File Name</th>
                                    <th>Notes</th>
                                    <th>File size</th>
                                    <th>Last Modified</th>
                                    <th>Action</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            @*Approved/blocked linguistic suppliers*@
            <div class="panel panel-locked" data-panel-locked data-panel-fullscreen="false" data-panel-close="false">
                <div class="panel-hdr">
                    <h2>
                        Approved / blocked linguistic suppliers
                        @if (Model.generalInfoButton == true)
                        {
                            <a href="@("http://myplus/ApprovedOrBlockedLinguisticSupplier.aspx?Mode=Add&DataObjectID=" + Model.Organisation.Id + "&DataObjectTypeID=2")" target="_blank" class="btn p-1"><i class="fad fa-plus-circle d-flex align-items-center" style="--fa-primary-color: white; --fa-secondary-color: green; font-size: 18px;" data-toggle="popover" data-trigger="hover" data-placement="top" title="" data-html="true" data-content="Add Linguist"></i></a>
                        }
                    </h2>
                </div>
                <div class="panel-container collapse">
                    <div class="panel-content">
                        <table id="dt-approved-linguists" class="table-sm table table-bordered table-hover table-striped w-100">
                            <thead class="bg-tp-red">
                                <tr>
                                    <th>Service</th>
                                    <th>Source</th>
                                    <th>Target</th>
                                    <th>Linguistic supplier</th>
                                    <th>Status</th>
                                    <th>Working pattern</th>
                                    <th>Working hours(UK time)</th>
                                    <th>Default software</th>
                                    <th>Applies to</th>
                                    <th>Notes</th>
                                    @*<th>Action</th>*@
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>Service</th>
                                    <th>Source</th>
                                    <th>Target</th>
                                    <th>Linguistic supplier</th>
                                    <th>Status</th>
                                    <th>Working pattern</th>
                                    <th>Working hours(UK time)</th>
                                    <th>Default software</th>
                                    <th>Applies to</th>
                                    <th>Notes</th>
                                    @*<th>Action</th>*@
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section ScriptsBlock {

    <script src="~/js/formplugins/select2/select2.bundle.js"></script>
    <script src="~/js/formplugins/inputmask/inputmask.bundle.js"></script>
    <script src="~/js/formplugins/ion-rangeslider/ion-rangeslider.js"></script>
    <script src="~/js/datagrid/datatables/datatables.bundle.js"></script>
    <script src="~/js/notifications/sweetalert2/sweetalert2.bundle.js"></script>

    <script>
        $('#js-page-content').smartPanel();

        var band1Top = @(Model.Organisation.FuzzyBand1TopPercentage ?? 0);
        var band1Bottom = @(Model.Organisation.FuzzyBand1BottomPercentage ?? 0)
        var band2Top = @(Model.Organisation.FuzzyBand2TopPercentage ?? 0);
        var band2Bottom = @(Model.Organisation.FuzzyBand2BottomPercentage ?? 0)
        var band3Top = @(Model.Organisation.FuzzyBand3TopPercentage ?? 0);
        var band3Bottom = @(Model.Organisation.FuzzyBand3BottomPercentage ?? 0)
        var band4Top = @(Model.Organisation.FuzzyBand4TopPercentage ?? 0);
        var band4Bottom = @(Model.Organisation.FuzzyBand4BottomPercentage ?? 0);

        var namePrefix = "Organisation.";

        var iplusDocsTable;

        $(document).ready(function () {
            $(function () {
                $('.select2').select2();

                $('#client-technology-select').select2({
                    placeholder: "Select Technology"
                });
                $('#client-industry-select').select2({
                    placeholder: "Select Industry"
                });
            });
            $(":input").inputmask();

            FuzzyBandsRangeInputs();

            initializeJobOrdersTable();
            initializeEnquiriesTable();
            initializeContactsTable();
            initializePriceListsTable();
            initializeQuoteTemplatesTable();
            initializeIplusDocsTable();
            initializeApprovedLinguistsTable();

            deleteIplusFileBtn();
            panelsAccessibility();
            showAlertsOnPageLoad();
        });

        $("input, textarea, select").on("input", function () {
            $(this).parents('form').children('div.flex-row-reverse').children('button.btn-outline-default').css({ background: 'red' });
        });

        var buttonClicked = undefined;

        // save clicked panel
        $('.btn-outline-default').on('click', function (e) {

            buttonClicked = $(this);
            let formId = $(this).parents("form").attr("id");

            let isValid = true; //validateForms(formId, namePrefix);
            if (isValid == false) {
                // show there was error near the button.
                $('.button-error').remove();
                this.insertAdjacentHTML('afterend', '<label style="color: red; padding: 2%;" class="button-error d-flex align-items-center">Please correct the errors in this panel.</label>')
                return;
            }
            else { $('.button-error').remove(); }

            let spendAlertCheckBox = $('input[name="@(nameof(Model.Organisation.SpendFrequencyAlertDays) + ".checkbox")"]:checked').val();
            spendAlertCheckBox = spendAlertCheckBox === 'true';
            let spendAlertDays = spendAlertCheckBox === true ? $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.SpendFrequencyAlertDays))"]').val() : 0;

            let data = {
                "@nameof(Model.LoggedInEmployee)": @Json.Serialize(Model.LoggedInEmployee),
                "@nameof(Model.SectionToUpdate)": formId,
                "@nameof(Model.Organisation)": {
                    "@nameof(Model.Organisation.Id)": @Model.Organisation.Id.ToString(),
                    // general info
                    "@nameof(Model.Organisation.Notes)": $('textarea[name="'+ namePrefix +'@(nameof(Model.Organisation.Notes))"]').val(),
                    // company info
                    "@nameof(Model.Organisation.OrgName)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.OrgName))"]').val(),
                    "@nameof(Model.Organisation.HouseNumber)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.HouseNumber))"]').val(),
                    "@nameof(Model.Organisation.Address1)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.Address1))"]').val(),
                    "@nameof(Model.Organisation.Address2)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.Address2))"]').val(),
                    "@nameof(Model.Organisation.Address3)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.Address3))"]').val(),
                    "@nameof(Model.Organisation.Address4)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.Address4))"]').val(),
                    "@nameof(Model.Organisation.CountyOrState)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.CountyOrState))"]').val(),
                    "@nameof(Model.Organisation.City)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.City))"]').val(),
                    "@nameof(Model.Organisation.CountryId)": $('select[name="@(nameof(Model.Countries))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.AltairRegionId)": $('select[name="@(nameof(Model.Regions))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.PostcodeOrZip)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.PostcodeOrZip))"]').val(),
                    "@nameof(Model.Organisation.EmailAddress)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.EmailAddress))"]').val(),
                    "@nameof(Model.Organisation.WebAddress)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.WebAddress))"]').val(),
                    "@nameof(Model.Organisation.PhoneNumber)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.PhoneNumber))"]').val(),
                    "@nameof(Model.Organisation.PhoneCountryId)": $('select[name="@(nameof(Model.Organisation.PhoneCountryId))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.FaxNumber)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.FaxNumber))"]').val(),
                    "@nameof(Model.Organisation.FaxCountryId)": $('select[name="@(nameof(Model.Organisation.FaxCountryId))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.IsOnRedAlert)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.IsOnRedAlert))"]').prop('checked'),
                    "@nameof(Model.Organisation.IsOnFinancialRedAlert)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.IsOnFinancialRedAlert))"]').prop('checked'),
                    // quoting and invoicing
                    "@nameof(Model.Organisation.InvoiceOrgName)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.InvoiceOrgName))"]').val(),
                    "@nameof(Model.Organisation.InvoiceAddress1)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.InvoiceAddress1))"]').val(),
                    "@nameof(Model.Organisation.InvoiceAddress2)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.InvoiceAddress2))"]').val(),
                    "@nameof(Model.Organisation.InvoiceAddress3)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.InvoiceAddress3))"]').val(),
                    "@nameof(Model.Organisation.InvoiceAddress4)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.InvoiceAddress4))"]').val(),
                    "@nameof(Model.Organisation.OrgSLA)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.OrgSLA))"]').val(),
                    "@nameof(Model.Organisation.InvoiceCountyOrState)": $('input[name="' + namePrefix + '@(nameof(Model.Organisation.InvoiceCountyOrState))"]').val(),
                    "@nameof(Model.Organisation.InvoiceCountryId)": $('select[name="@(nameof(Model.Organisation.InvoiceCountryId))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.InvoicePostcodeOrZip)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.InvoicePostcodeOrZip))"]').val(),
                    "@nameof(Model.Organisation.InvoiceDefaultContactId)": $('select[name="@(nameof(Model.Organisation.InvoiceDefaultContactId))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.InvoiceDefaultSecondContactId)": $('select[name="@(nameof(Model.Organisation.InvoiceDefaultSecondContactId))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.InvoiceCurrencyId)": $('select[name="@(nameof(Model.Organisation.InvoiceCurrencyId))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.InvoiceLangIanacode)": $('select[name="@(nameof(Model.Organisation.InvoiceLangIanacode))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.InvoiceBlanketPonumber)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.InvoiceBlanketPonumber))"]').val(),
                    "@nameof(Model.Organisation.PaymentDaysAreFromEndOfMonth)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.PaymentDaysAreFromEndOfMonth))"]').prop('checked'),
                    "@nameof(Model.Organisation.AllowEarlyClientInvoicing)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.AllowEarlyClientInvoicing))"]').prop('checked'),
                    "@nameof(Model.Organisation.EarlyPaymentDiscount)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.EarlyPaymentDiscount))"]').val(),
                    "@nameof(Model.Organisation.PonumbersRequiredForGoAheads)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.PonumbersRequiredForGoAheads))"]').prop('checked'),
                    "@nameof(Model.Organisation.PonumbersRequiredForInvoicing)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.PonumbersRequiredForInvoicing))"]').prop('checked'),
                    "@nameof(Model.Organisation.AllowLateFees)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.AllowLateFees))"]').prop('checked'),
                    "@nameof(Model.Organisation.InvoicingAutoCreateAndSendInvoices)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.InvoicingAutoCreateAndSendInvoices))"]').prop('checked'),
                    "@nameof(Model.Organisation.InvoicingAutoChaseOverdueContacts)": $('#@(nameof(Model.Organisation.InvoicingAutoChaseOverdueContacts))').prop('checked'),
                    "@nameof(Model.Organisation.Vatnumber)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.Vatnumber))"]').val(),
                    "@nameof(Model.Organisation.CompanyRegistrationNumber)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.CompanyRegistrationNumber))"]').val(),
                    "@nameof(Model.Organisation.Tinnumber)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.Tinnumber))"]').val(),
                    "@nameof(Model.Organisation.HfmcodeBs)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.HfmcodeBs))"]').val(),
                    "@nameof(Model.Organisation.HfmcodeIs)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.HfmcodeIs))"]').val(),
                    "@nameof(Model.Organisation.DefaultQuoteApprovalReason)": $('select[name="@(nameof(Model.Organisation.DefaultQuoteApprovalReason))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.EnabledForAutoQuoteGeneration)": $('#@(nameof(Model.Organisation.EnabledForAutoQuoteGeneration))').prop('checked'),
                    "@nameof(Model.Organisation.SapmasterDataReferenceNumber)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.SapmasterDataReferenceNumber))"]').val(),
                    "@nameof(Model.Organisation.ShowCustomField1)": $('#@(nameof(Model.Organisation.ShowCustomField1))').prop('checked'),
                    "@nameof(Model.Organisation.ShowCustomField2)": $('#@(nameof(Model.Organisation.ShowCustomField2))').prop('checked'),
                    "@nameof(Model.Organisation.ShowCustomField3)": $('#@(nameof(Model.Organisation.ShowCustomField3))').prop('checked'),
                    "@nameof(Model.Organisation.ShowCustomField4)": $('#@(nameof(Model.Organisation.ShowCustomField4))').prop('checked'),
                    //Sales & Marketing information
                    "@nameof(Model.Organisation.SalesCategoryId)": $('select[name="@(nameof(Model.Organisation.SalesCategoryId))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.ExcludeFromDirectMarketing)": $('#@(nameof(Model.Organisation.ExcludeFromDirectMarketing))').prop('checked'),

                    "@nameof(Model.ClientTechnologies)": $('select[name="@(nameof(Model.ClientTechnologies))"]').val(),
                    "@nameof(Model.Organisation.LegalStatusId)": $('select[name="@(nameof(Model.Organisation.LegalStatusId))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.CorporateGroupeId)": $('select[name="@(nameof(Model.Organisation.CorporateGroupeId))"]').find(':selected').val(),
                    "@nameof(Model.OrgIndustrySectors)": $('select[name="@(nameof(Model.OrgIndustrySectors))"]').val(),
                    "@nameof(Model.Organisation.MainIndustryId)": $('select[name="@(nameof(Model.Organisation.MainIndustryId))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.TpintroductionSource)": $('select[name="@(nameof(Model.Organisation.TpintroductionSource))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.SpendFrequencyAlertDays)": spendAlertDays,
                    "@nameof(Model.Organisation.AlertClientOfNonApprovedLinguists)": $('#@(nameof(Model.Organisation.AlertClientOfNonApprovedLinguists))').prop('checked'),
                    // i plus settings
                    "@nameof(Model.Organisation.ExtranetShowClientReviewOptions)": $('#@(nameof(Model.Organisation.ExtranetShowClientReviewOptions))').prop('checked'),
                    "@nameof(Model.Organisation.ExtranetIncludeClientReviewByDefault)": $('#@(nameof(Model.Organisation.ExtranetIncludeClientReviewByDefault))').prop('checked'),
                    "@nameof(Model.Organisation.ExtranetSendClientReviewDeadlineReminders)": $('#@(nameof(Model.Organisation.ExtranetSendClientReviewDeadlineReminders))').prop('checked'),
                    "@nameof(Model.Organisation.AllowAssigningClientReviewer)": $('#@(nameof(Model.Organisation.AllowAssigningClientReviewer))').prop('checked'),
                    "@nameof(Model.Organisation.ManageReviews)": $('#@(nameof(Model.Organisation.ManageReviews))').prop('checked'),
                    "@nameof(Model.Organisation.EnabledForPerSegmentCommenting)": $('#@(nameof(Model.Organisation.EnabledForPerSegmentCommenting))').prop('checked'),
                    "@nameof(Model.Organisation.ExtranetShowDtpoptions)": $('#@(nameof(Model.Organisation.ExtranetShowDtpoptions))').prop('checked'),
                    "@nameof(Model.Organisation.ExtranetDtpoptionSelectedByDefault)": $('#@(nameof(Model.Organisation.ExtranetDtpoptionSelectedByDefault))').prop('checked'),
                    "@nameof(Model.Organisation.IplusTimeOut)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.IplusTimeOut))"]').val(),
                    "@nameof(Model.Organisation.CanCancelJobsViaExtranet)": $('#@(nameof(Model.Organisation.CanCancelJobsViaExtranet))').prop('checked'),
                    "@nameof(Model.Organisation.ExtranetAllowRequestOfJobsAndQuotesWithNoDeadline)": $('#@(nameof(Model.Organisation.ExtranetAllowRequestOfJobsAndQuotesWithNoDeadline))').prop('checked'),
                    "@nameof(Model.Organisation.IncludeInNotificationsOn)": $('#@(nameof(Model.Organisation.IncludeInNotificationsOn))').prop('checked'),
                    "@nameof(Model.Organisation.IncludeInNotifications)": $('textarea[name="' + namePrefix + '@(nameof(Model.Organisation.IncludeInNotifications))"]').val(),
                    // job settings
                    "@nameof(Model.Organisation.JobServerLocation)": $('select[name="@(nameof(Model.Organisation.JobServerLocation))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.JobFilesToBeSavedWithinRegion)": $('select[name="@(nameof(Model.Organisation.JobFilesToBeSavedWithinRegion))"]').find(':selected').val(),
                    "@nameof(Model.Organisation.AllowPriority)": $('#@(nameof(Model.Organisation.AllowPriority))').prop('checked'),
                    "@nameof(Model.Organisation.LinguistRatingEnabled)": $('#@(nameof(Model.Organisation.LinguistRatingEnabled))').prop('checked'),
                    "@nameof(Model.Organisation.EnabledForClientAutomation)": $('#@(nameof(Model.Organisation.EnabledForClientAutomation))').prop('checked'),
                    "@nameof(Model.Organisation.TradosProjectTemplatePath)": $('textarea[name="' + namePrefix + '@(nameof(Model.Organisation.TradosProjectTemplatePath))"]').val(),
                    "@nameof(Model.Organisation.EnabledForOrgLevelMarginsThreshold)": $('#@(nameof(Model.Organisation.EnabledForOrgLevelMarginsThreshold))').prop('checked'),
                    // fuzzy bands
                    "@nameof(Model.Organisation.FuzzyBand1BottomPercentage)": band1Bottom,
                    "@nameof(Model.Organisation.FuzzyBand1TopPercentage)": band1Top,
                    "@nameof(Model.Organisation.FuzzyBand2BottomPercentage)": band2Bottom,
                    "@nameof(Model.Organisation.FuzzyBand2TopPercentage)": band2Top,
                    "@nameof(Model.Organisation.FuzzyBand3BottomPercentage)": band3Bottom,
                    "@nameof(Model.Organisation.FuzzyBand3TopPercentage)": band3Top,
                    "@nameof(Model.Organisation.FuzzyBand4BottomPercentage)": band4Bottom,
                    "@nameof(Model.Organisation.FuzzyBand4TopPercentage)": band4Top,
                    // lion box
                    "@nameof(Model.Organisation.ClientLionBoxLink)": $('input[name="' + namePrefix + '@(nameof(Model.Organisation.ClientLionBoxLink))"]').val(),
                    "@nameof(Model.Organisation.SupplierLionBoxLink)": $('input[name="' + namePrefix + '@(nameof(Model.Organisation.SupplierLionBoxLink))"]').val(),
                    // chargeable
                    "@nameof(Model.Organisation.AllowInHouseTranslation)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.AllowInHouseTranslation))"]').prop('checked'),
                    "@nameof(Model.Organisation.DesignPlusAccessEnabled)": $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.DesignPlusAccessEnabled))"]').prop('checked'),
                    "@nameof(Model.Organisation.TranslateonlineStatus)": $('#translation-choice').find(':selected').val(),
                    "@nameof(Model.Organisation.DesignplusStatus)": $('#designPlus-choice').find(':selected').val()
                }
            }

            $.ajax({
                beforeSend: function () {
                    // add loading spinner
                },
                url: "api/Organisation/Update",
                method: 'POST',
                dataType: 'json',
                data: data,
                success: function (data) {
                    //confirm update was successfull
                    //alert('Successful update: ' + data);
                    //buttonClicked.insertAdjacentHTML('afterend', '<label style="color: green; padding: 2%;" class="button-error d-flex align-items-center">Successful update.</label>')
                    $('.error-span').remove();
                    //Swal.fire("Yaay!", "Updated successfully.", "success");
                    buttonClicked.css({ background: 'lightgreen' });
                    setTimeout(function () { buttonClicked.css({ background: 'white' }); }, 2500);
                },
                error: function (err) {
                    //show there was an error
                    alert('ERROR');
                    console.log(err);
                    Swal.fire("Oops!", "There was an error while trying to update the panel.", "error");
                },
                complete: function () {
                    // remove the spinner
                }
            });

            e.preventDefault();
        });

        function validateForms(sectionToValidate, namePrefix) {
        let valid = true;
        $('.error-span').remove();

        if (sectionToValidate === "@Model.keyInfoSection") {

            let orgField = $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.OrgName))"]')[0];
            if (orgField.value == "") {
                let spanEl = GetErrorSpanString('Organisation name is required.');
                orgField.insertAdjacentHTML('afterend', spanEl)
                valid = false;
            }

            @*let cityField = $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.City))"]')[0];
            if (cityField.value == "") {
                let spanEl = GetErrorSpanString('City is required');
                cityField.insertAdjacentHTML('afterend', spanEl)
                valid = false;
            }*@

            let emailField = $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.EmailAddress))"]')[0];
            if (emailField.value == "") {
                let spanEl = GetErrorSpanString('Email is required');
                emailField.insertAdjacentHTML('afterend', spanEl)
                valid = false;
            }
            //let reg = new RegExp("\w+([-+.']\w+)*@@\w+([-.]\w+)*\.\w+([-.]\w+)*");
            //let reg = new RegExp("/^(([^<>()[\]\.,;:\s@@\"]+(\.[^<>()[\]\.,;:\s@@\"]+)*)|(\".+\"))@@(([^<>()[\]\.,;:\s@@\"]+\.)+[^<>()[\]\.,;:\s@@\"]{2,})$/i");
            //if (emailField.value != "" && reg.test(emailField.value) == false) {
            //    let spanEl = GetErrorSpanString('This email is not valid');
            //    emailField.insertAdjacentHTML('afterend', spanEl)
            //    valid = false;
            //}

            if($('#@(nameof(Model.Organisation.IsOnRedAlert))').prop('checked') == true){
                if($('#redAlertReason').val() == ""){
                    let reasonTextBox = $('#redAlertReason')[0];
                    let spanEl = GetErrorSpanString('Please provide reason');
                    reasonTextBox.insertAdjacentHTML('afterend', spanEl)
                }
            }

            if($('#@(nameof(Model.Organisation.IsOnFinancialRedAlert))').prop('checked') == true){
                if($('#financialRedAlertReason').val() == ""){
                    let financialReasonTextBox = $('#financialRedAlertReason')[0];
                    let spanEl = GetErrorSpanString('Please provide reason');
                    financialReasonTextBox.insertAdjacentHTML('afterend', spanEl)
                }
            }
        }
        else if (sectionToValidate === "@Model.quotingAndInvoicingSection") {

            @*let orgField = $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.OrgName))"]')[0];
                                    if (orgField.value == "") {
                                        let spanEl = '<span class="col-sm-3"></span><span style="color: red;" class="error-span col-sm-9">Organisation name is required</span>';
                                        orgField.insertAdjacentHTML('afterend', spanEl)
                                        valid = false;
                                    }*@

            let paymentField = $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.EarlyPaymentDiscount))"]')[0];
            if (Number(paymentField.value) > 100 && Number(paymentField.value) < 0) {
                let spanEl = GetErrorSpanString('You must enter a valid number.');
                paymentField.insertAdjacentHTML('afterend', spanEl)
                valid = false;
            }

            if($('#@nameof(Model.Organisation.InvoicingAutoCreateAndSendInvoices)').prop('checked') == true){
                let reason = $('#autoReasonOffText').val();
                if(reason == ""){
                    let spanEl = GetErrorSpanString('You must provide a reason.');
                    $('#autoReasonOffText')[0].insertAdjacentHTML('afterend', spanEl)
                    valid = false;
                }
            }
        }
        else if (sectionToValidate === "@Model.salesAndMarketingSection"){

            let valuesArr = $('select[name="@(nameof(Model.OrgIndustrySectors))"]').val();
            if (valuesArr.length <= 0) {
                let spanEl = GetErrorSpanString('You must select at least one industry sector.');
                $('select[name="@(nameof(Model.OrgIndustrySectors))"]')[0].insertAdjacentHTML('afterend', spanEl)
                valid = false;
            }
        }
        else if (sectionToValidate === "@Model.jobSettingsSection"){

            if ($('#@nameof(Model.Organisation.EnabledForOrgLevelMarginsThreshold)').prop('checked') == true) {
                let LowerValue = $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.MarginsApprovalLowerThreshold))"]').val();
                if (LowerValue == undefined || LowerValue == "") {
                    let spanEl = GetErrorSpanString('You must enter a valid percentage.');
                    $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.MarginsApprovalLowerThreshold))"]')[0].insertAdjacentHTML('afterend', spanEl)
                    valid = false;
                }

                let upperValue = $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.MarginsApprovalUpperThreshold))"]').val();
                if (upperValue == undefined || upperValue == "") {
                    let spanEl = GetErrorSpanString('You must enter a valid percentage.');
                    $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.MarginsApprovalUpperThreshold))"]')[0].insertAdjacentHTML('afterend', spanEl)
                    valid = false;
                }
            }
        }
        else if (sectionToValidate === "@Model.iplusSettingsSection"){

            if ($('input[name="'+ namePrefix +'@(nameof(Model.Organisation.IplusTimeOut))"]').val() == "") {
                let spanEl = GetErrorSpanString('You must enter a whole number(minutes).');
                $('input[name="'+ namePrefix +'@(nameof(Model.Organisation.IplusTimeOut))"]')[0].insertAdjacentHTML('afterend', spanEl)
                valid = false;
            }
        }

        return valid;
    }

        function GetErrorSpanString(message){
            return `<span class="col-sm-3"></span><span style="color: red;" class="error-span col-sm-9">${message}</span>`;
        }

        function FuzzyBandsRangeInputs() {

        var ionskin = "sharp";
        let gridNumber = 6;

        //Manipulating interval
        let band1Slider = $("#band1");
        band1Slider.ionRangeSlider({
            skin: ionskin,
            type: "double",
            postfix: "%",
            min: 1,
            max: 99,
            from: @(Model.Organisation.FuzzyBand1BottomPercentage ?? 0),
            to: @(Model.Organisation.FuzzyBand1TopPercentage != null && Model.Organisation.FuzzyBand1TopPercentage > 0 ? Model.Organisation.FuzzyBand1TopPercentage : 99),
            drag_interval: true,
            max_interval: 99,
            grid: true,         // default false (enable grid)
            grid_num: gridNumber,        // default 4 (set number of grid cells)
            grid_snap: false,    // default false (snap grid to step)
            onChange: function (data) {
                if (data.to < 99) {
                    band2Slider.parent().css('display', '');
                    band2SliderInstance.update({
                        min: data.to + 1,
                        max: 99,
                        from: data.to + 1,
                        to: band2Slider.data().to
                    })
                    band2Bottom = data.to + 1;
                    band2Top = band2Slider.data().to;
                }
                else {
                    band2Slider.parent().css('display', 'none');
                    band2SliderInstance.update({
                        min: 0,
                        max: 99,
                        from: 0,
                        to: 0
                    })
                }

                band1Bottom = data.from;
                band1Top = data.to;
            },
            onUpdate: function (data) {
                if (data.to >= 99) {
                    band2Slider.parent().css('display', 'none');
                    band2SliderInstance.update({
                        from: 0,
                        to: 0
                    })
                    band2Bottom = 0;
                    band2Top = 0;

                    band3Slider.parent().css('display', 'none');
                    band3SliderInstance.update({
                        from: 0,
                        to: 0
                    })
                    band3Bottom = 0;
                    band3Top = 0;

                    band4Slider.parent().css('display', 'none');
                    band4SliderInstance.update({
                        from: 0,
                        to: 0
                    })
                    band4Bottom = 0;
                    band4Top = 0;
                }
            }
        });
        let band1SliderInstance = band1Slider.data("ionRangeSlider");

        let band2Slider = $("#band2");
        band2Slider.ionRangeSlider({
            skin: ionskin,
            type: "double",
            postfix: "%",
            min: @(Model.Organisation.FuzzyBand2BottomPercentage ?? 1),
            max: 99,
            from: @(Model.Organisation.FuzzyBand2BottomPercentage ?? 0),
            to: @(Model.Organisation.FuzzyBand2TopPercentage != null && Model.Organisation.FuzzyBand2TopPercentage > 0 ? Model.Organisation.FuzzyBand2TopPercentage : 99),
            drag_interval: true,
            max_interval: 99,
            grid: true,
            grid_num: gridNumber,
            grid_snap: false,
            onChange: function (data) {

                if (data.to < 99) {
                    band3Slider.parent().css('display', '');
                    band3SliderInstance.update({
                        min: data.to + 1,
                        max: 99,
                        from: data.to + 1,
                        to: band3Slider.data().to
                    })
                    band3Bottom = data.from;
                    band3Top = data.to;
                }
                else {
                    band3Slider.parent().css('display', 'none');
                    band3SliderInstance.update({
                        min: 0,
                        max: 99,
                        from: 0,
                        to: 0
                    })
                }
                if (data.from > band1Top) {
                    band1SliderInstance.update({
                        to: data.from - 1
                    })
                }

                band2Bottom = data.from;
                band2Top = data.to;
            },
            onUpdate: function (data) {
                if (data.to >= 99) {
                    band3Slider.parent().css('display', 'none');
                    band3SliderInstance.update({
                        from: 0,
                        to: 0
                    })
                    band3Bottom = 0;
                    band3Top = 0;
                }
                if (data.to == 0) {
                    band3Slider.parent().css('display', 'none');
                    band3SliderInstance.update({
                        from: 0,
                        to: 0
                    })
                    band3Bottom = 0;
                    band3Top = 0;

                    band4Slider.parent().css('display', 'none');
                    band4SliderInstance.update({
                        from: 0,
                        to: 0
                    })
                    band4Bottom = 0;
                    band4Top = 0;
                }
            }
        });
        let band2SliderInstance = band2Slider.data("ionRangeSlider");

        let band3Slider = $("#band3");
        band3Slider.ionRangeSlider({
            skin: ionskin,
            type: "double",
            postfix: "%",
            min: @(Model.Organisation.FuzzyBand3BottomPercentage ?? 1),
            max: 99,
            from: @(Model.Organisation.FuzzyBand3BottomPercentage ?? 0),
            to: @(Model.Organisation.FuzzyBand3TopPercentage != null && Model.Organisation.FuzzyBand3TopPercentage > 0 ? Model.Organisation.FuzzyBand3TopPercentage : 99),
            drag_interval: true,
            max_interval: 99,
            grid: true,
            grid_num: gridNumber,
            grid_snap: false,
            onChange: function (data) {

                if (data.to < 99) {
                    band4Slider.parent().css('display', '');
                    band4SliderInstance.update({
                        min: data.to + 1,
                        max: 99,
                        from: data.to + 1,
                        to: 99
                    })
                }
                else {
                    band4Slider.parent().css('display', 'none');
                    band4SliderInstance.update({
                        min: 0,
                        max: 99,
                        from: 0,
                        to: 0
                    })
                }
                if (data.from > band2Top) {
                    band2SliderInstance.update({
                        to: data.from - 1
                    })
                }

                band3Bottom = data.from;
                band3Top = data.to;
            },
            onUpdate: function (data) {
                if (data.to >= 99) {
                    band4Slider.parent().css('display', 'none');
                    band4SliderInstance.update({
                        from: 0,
                        to: 0
                    })
                    band4Bottom = 0;
                    band4Top = 0;
                }
                if (data.to == 0) {
                    band4Slider.parent().css('display', 'none');
                    band4SliderInstance.update({
                        from: 0,
                        to: 0
                    })
                    band4Bottom = 0;
                    band4Top = 0;
                }
            }
        });
        let band3SliderInstance = band3Slider.data("ionRangeSlider");

        let band4Slider = $("#band4");
        band4Slider.ionRangeSlider({
            to_fixed: true,
            skin: ionskin,
            type: "double",
            min: @(Model.Organisation.FuzzyBand4BottomPercentage ?? 1),
            max: 99,
            from: @(Model.Organisation.FuzzyBand4BottomPercentage ?? 0),
            to: @(Model.Organisation.FuzzyBand4TopPercentage != null && Model.Organisation.FuzzyBand4TopPercentage > 0 ? Model.Organisation.FuzzyBand4TopPercentage : 99),
            drag_interval: true,
            max_interval: 99,
            grid: true,
            grid_num: gridNumber,
            grid_snap: false,
            onChange: function (data) {
                if (data.from > band3Top) {
                    band3SliderInstance.update({
                        to: data.from - 1
                    })
                }

                band4Bottom = data.from;
                band4Top = data.to;
            }
        });
        let band4SliderInstance = band4Slider.data("ionRangeSlider");
    }

        function initializeContactsTable() {
        var dataSet = @Html.Raw(JsonSerializer.Serialize( Model.AllContacts ));

        $('#dt-all-contacts').dataTable(
            {
                data: dataSet,
                dataSrc: "",
                columns: [
                    {
                        "data": "Id",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data == 0) {
                                    return 'N/A';
                                }
                                else {
                                    let link = `https://myplusbeta.publicisgroupe.net/Contact?ContactID=${data}`;
                                    return '<a href="' + link + '" target="_blank" >' + data + '</a>';
                                }
                            }
                            return data;
                        } },
                    { "data": "Name" },
                    { "data": "JobTitle" },
                    { "data": "Department" },
                    { "data": "LandlineNumber" },
                    { "data": "MobileNumber" },
                    { "data": "EmailAddress",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data != "") {
                                    return `<a href="mailto:${row.EmailAddress}">${row.EmailAddress}</a>`;
                                }
                            }
                            return data;
                        }
                    }
                ],
                "order": [[1, "asc"]],
                colReorder: true,
                responsive: true,
                dom:
                    "<'row mb-3'<'col-sm-12 col-md-6 d-flex align-items-center justify-content-start'f><'col-sm-12 col-md-6 d-flex align-items-center justify-content-end'B>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                buttons: [
                    {
                        extend: 'pageLength',
                        className: 'btn-outline-default'
                    },
                    {
                        extend: 'colvis',
                        text: 'Column Visibility',
                        titleAttr: 'Col visibility',
                        className: 'btn-outline-default'
                    }
                ],

                initComplete: function () {
                    this.api().columns().every(function () {
                        var column = this;
                        var select = $('<select class="custom-select form-control"><option value=""></option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });
                    });
                }
            });
    }

        function initializePriceListsTable() {
        var dataSet = @Html.Raw(JsonSerializer.Serialize( Model.AllPriceLists ));

        $('#dt-all-price-lists').dataTable(
            {
                data: dataSet,
                dataSrc: "",
                columns: [
                    {
                        "data": "Id",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data == 0) {
                                    return 'N/A';
                                }
                                else {
                                    let link = `http://myplus/ClientPriceList.aspx?PriceListID=${data}`;
                                    return '<a href="' + link + '" target="_blank" >' + data + '</a>';
                                }
                            }
                            return data;
                        } },
                    { "data": "Name" },
                    { "data": "CurrencyName" },
                    { "data": "InForce",
                        render: function (data, type, row, meta) {
                            return getDateString(data);
                        } },
                    { "data": "AppliesToTypeString" }
                ],
                colReorder: true,
                responsive: true,
                dom:
                    "<'row mb-3'<'col-sm-12 col-md-6 d-flex align-items-center justify-content-start'f><'col-sm-12 col-md-6 d-flex align-items-center justify-content-end'B>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                buttons: [
                    {
                        extend: 'pageLength',
                        className: 'btn-outline-default'
                    },
                    {
                        extend: 'colvis',
                        text: 'Column Visibility',
                        titleAttr: 'Col visibility',
                        className: 'btn-outline-default'
                    }
                ],

                initComplete: function () {
                    this.api().columns().every(function () {
                        var column = this;
                        var select = $('<select class="custom-select form-control"><option value=""></option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });
                    });
                }
            });
    }

        function initializeQuoteTemplatesTable() {
        var dataSet = @Html.Raw(JsonSerializer.Serialize( Model.AllQuoteTemplates ));

        $('#dt-quote-templates').dataTable(
            {
                data: dataSet,
                dataSrc: "",
                columns: [
                    {
                        "data": "Id",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data == 0) {
                                    return 'N/A';
                                }
                                else {
                                    let link = `http://myplus/QuoteTemplate.aspx?QuoteTemplateID=${data}`;
                                    return '<a href="' + link + '" target="_blank" >' + data + '</a>';
                                }
                            }
                            return data;
                        } },
                    { "data": "Name"},
                    { "data": "Language" },
                    { "data": "ApplicableToHTMLLiteral" },
                    { "data": "CreatedOn",
                        render: function (data, type, row, meta) {
                            return getDateString(data);
                        } },
                    { "data": "ModifiedOn",
                        render: function (data, type, row, meta) {
                            if (data == undefined || data == null) {
                                return "(never)";
                            }
                            else {
                                return getDateString(data);
                            }
                        } },
                    { "data": "CreatedByEmployeeName",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data == 0) {
                                    return 'N/A';
                                }
                                else {
                                    let link = `https://myplusbeta.publicisgroupe.net/HR/EmployeeProfile/${row.CreatedByEmployeeId}`;
                                    return '<a href="' + link + '" target="_blank" >' + data + '</a>';
                                }
                            }
                            return data;
                        } }
                ],
                colReorder: true,
                responsive: true,
                dom:
                    "<'row mb-3'<'col-sm-12 col-md-6 d-flex align-items-center justify-content-start'f><'col-sm-12 col-md-6 d-flex align-items-center justify-content-end'B>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                buttons: [
                    {
                        extend: 'pageLength',
                        className: 'btn-outline-default'
                    },
                    {
                        extend: 'colvis',
                        text: 'Column Visibility',
                        titleAttr: 'Col visibility',
                        className: 'btn-outline-default'
                    }
                ],

                initComplete: function () {
                    this.api().columns().every(function () {
                        var column = this;
                        var select = $('<select class="custom-select form-control"><option value=""></option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });
                    });
                }
            });
        }

        function initializeJobOrdersTable() {
            var dataObjectId = @Model.Organisation.Id;
            var dataTypeId = @(((int)Global_Settings.Enumerations.DataObjectTypes.Org));

        $("#dt-all-orders-component").dataTable(
            {
                processing: true,
                serverSide: true,
                ajax: {
                    contentType: "application/json; charset=utf-8",
                    url: "/api/components/GetAllJobOrdersDataTableComponentData",
                    type: 'POST',
                    data: function (d) {
                        return JSON.stringify({ parameters: d, dataObjectId, dataTypeId });
                    }
                },
                order: [[7, "desc"]],
                lengthMenu: [10, 20, 50, 100, 200],
                //fixedHeader: true,
                responsive: true,
                columns: [
                    {
                        "data": "jobOrderId",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                let link = `https://myplusbeta.publicisgroupe.net/tmsjoborder/joborder?joborderid=${data}`;

                                return '<a href="' + link + '" target="_blank" >' + data + '</a>';
                            }
                            return data;
                        } },
                    {
                        "data": "enquiryId",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data == 0) {
                                    return 'N/A';
                                }
                                else {
                                    let link = `https://myplusbeta.publicisgroupe.net/enquiry?ID=${row.enquiryId}`;
                                    return '<a href="' + link + '" target="_blank" >' + data + '</a>';
                                }
                            }
                            return data;
                        }
                    },
                    { "data": "jobOrderName" },
                    {
                        "data": "contactName",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                let link = `https://myplusbeta.publicisgroupe.net/Contact?ContactID=${row.contactId}`;

                                return '<a href="' + link + '" target="_blank" >' + data + '</a>';
                            }
                            return data;
                        }
                    },
                    { "data": "sourceLangsCombined" },
                    { "data": "targetLangsCombined" },
                    {
                        "data": "status",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data == '') {
                                    return 'N/A';
                                }
                                else {
                                    if (data == 'Overdue') {
                                        return `<span style="color: red;">${data}</span>`;
                                    }
                                    else if (data == 'Completed') {
                                        return `<span style="color: limegreen;">${data}</span>`;
                                    }
                                    else {
                                        //return `<span style="color: darkorange;">${data}</span>`;
                                        return data;
                                    }
                                }
                            }
                            return data;
                        } },
                    {
                        "data": "submittedDate",
                        render: function (data, type, row, meta) {
                            return getDateString(data);
                        } },
                    {
                        "data": "deliveryDeadline",
                        render: function (data, type, row, meta) {
                            return getDateString(data);
                        } },
                    {
                        "data": "margin",
                        render: function (data, type, row, meta) {
                            if (type === "display") {

                                return `${data.toFixed(2)} %`;
                            }
                            return data;
                        }
                    },
                    {
                        "data": "value",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                const fraction = new Intl.NumberFormat('en-GB', {
                                    minimumFractionDigits: 2,
                                    maximumFractionDigits: 2,
                                });
                                return `${row.currency}${fraction.format(data)}`;
                            }
                            return data;
                        }
                    },
                    {
                        "data": "supplierCost",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                const fraction = new Intl.NumberFormat('en-GB', {
                                    minimumFractionDigits: 2,
                                    maximumFractionDigits: 2,
                                });

                                return `£${fraction.format(data)}`;
                            }
                            return data;
                        }},
                    {
                        "data": "completionDate",
                        "defaultContent": "N/A",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data == undefined || data == '' || data == null) { return "N/A" }
                                return getDateString(data);
                            }
                        }}
                ],
                //columnDefs: [
                //    {
                //        "targets": [14],
                //        "visible": false
                //    },
                //    {
                //        "targets": [13],
                //        "visible": false
                //    },
                //    {
                //        "targets": [12],
                //        "visible": false
                //    },
                //],
                dom:
                    "<'row mb-3'<'col-sm-12 col-md-6 d-flex align-items-center justify-content-start'f><'col-sm-12 col-md-6 d-flex align-items-center justify-content-end'B>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                buttons: [
                    {
                        extend: 'pageLength',
                        className: 'btn-outline-default'
                    },
                    {
                        extend: 'colvis',
                        text: 'Column Visibility',
                        titleAttr: 'Col visibility',
                        className: 'btn-outline-default'
                    }
                ]
            });
        }

        function initializeEnquiriesTable() {
            var dataObjectId = @Model.Organisation.Id;
            var dataTypeId = @(((int)Global_Settings.Enumerations.DataObjectTypes.Org));

            $("#dt-all-enquiries-component").dataTable(
            {
                processing: true,
                serverSide: true,
                ajax: {
                    contentType: "application/json; charset=utf-8",
                    url: "/api/components/GetAllEnquiriesDataTableComponentData",
                    type: 'POST',
                    data: function (d) {
                        return JSON.stringify({ parameters: d, dataObjectId, dataTypeId });
                    }
                },
                order: [[8, "desc"]],
                lengthMenu: [10, 20, 50, 100, 200],
                columns: [
                    {
                        "data": "id",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data == 0) {
                                    return 'N/A';
                                }
                                else {
                                    let link = `https://myplusbeta.publicisgroupe.net/enquiry?ID=${data}`;
                                    return '<a href="' + link + '" target="_blank" >' + data + '</a>';
                                }
                            }
                            return data;
                        } },
                    { "data": "enqName" },
                    { "data": "enqStatus" },
                    { "data": "sourceLanguagesCombined" },
                    { "data": "targetLanguagesCombined" },
                    { "data": "enqReason" },
                    { "data": "enqCurrencyName",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data == '(none') {
                                    return 'N/A';
                                }
                                else {
                                    if (data == "") {
                                        return "";
                                    }
                                    else {
                                        const fraction = new Intl.NumberFormat('en-GB', {
                                            minimumFractionDigits: 2,
                                            maximumFractionDigits: 2,
                                        });


                                        return `${data}${fraction.format(row.enqValue)}`;
                                    }
                                }
                            }
                            return data;
                        }},
                    {
                        "data": "deadline",
                        render: function (data, type, row, meta) {
                            if (data == "1989-01-01T00:00:00") {
                                return "";
                            }
                            else {
                                return getDateString(data);
                            }
                        }},
                    {
                        "data": "submittedDateTime",
                        render: function (data, type, row, meta) {
                            return getDateString(data);
                        } },
                    {
                        "data": "enqModified",
                        render: function (data, type, row, meta) {
                            if (data == "1989-01-01T00:00:00") {
                                return "";
                            }
                            else {
                                return getDateString(data);
                            }
                        } },
                    { "data": "submittedBy",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data == '(none)') {
                                    return 'N/A';
                                }
                                else {
                                    let link = `https://myplusbeta.publicisgroupe.net/HR/EmployeeProfile/${row.submittedByID}`;
                                    return '<a href="' + link + '" target="_blank" >' + data + '</a>';
                                }
                            }
                            return data;
                        } },
                    {
                        "data": "enqSales",
                        render: function (data, type, row, meta) {
                            if (type === "display") {
                                if (data == '(none)') {
                                    return 'N/A';
                                }
                                else {
                                    let link = `https://myplusbeta.publicisgroupe.net/HR/EmployeeProfile/${row.enqSalesID}`;
                                    return '<a href="' + link + '" target="_blank" >' + data + '</a>';
                                }
                            }
                            return data;
                        }
                    }
                ],
                //columnDefs: [
                //    {
                //        "targets": [13],
                //        "visible": false
                //    }
                //],
                responsive: true,
                dom:
                    "<'row mb-3'<'col-sm-12 col-md-6 d-flex align-items-center justify-content-start'f><'col-sm-12 col-md-6 d-flex align-items-center justify-content-end'B>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                buttons: [
                    {
                        extend: 'pageLength',
                        className: 'btn-outline-default'
                    },
                    {
                        extend: 'colvis',
                        text: 'Column Visibility',
                        titleAttr: 'Col visibility',
                        className: 'btn-outline-default'
                    }
                ]
            });
        }

        function formatBytes(bytes, decimals = 2) {
            if (bytes === 0) return '0 Bytes';

            const k = 1024;
            const dm = decimals < 0 ? 0 : decimals;
            const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];

            const i = Math.floor(Math.log(bytes) / Math.log(k));

            return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
        }

        function getDateString(date) {
            //debugger;
            var dataObj = new Date(date);
            var dayofweek = dataObj.toLocaleString('default', { weekday: 'short' });
            var month = dataObj.toLocaleString('default', { month: 'long' });
            var day = dataObj.getUTCDate();
            var year = dataObj.getUTCFullYear();
            return dayofweek + " " + day + " " + month + " " + year;

        }
        function initializeIplusDocsTable() {
        var dataSet = @Html.Raw(JsonSerializer.Serialize( Model.SharedIplusFiles ));

            iplusDocsTable = $('#dt-iplus-docs').dataTable(
            {
                data: dataSet,
                dataSrc: "",
                columns: [
                    {
                        "data": "FileName",
                        "defaultContent": "N/A",
                        render: function (data, type, row, meta) {
                            if (type == "display") {
                                return '<a href="Organisation/SaveFile?filePath=' + row.AbsoluteSystemFilePath + '&clientNameOfTheFile=' + data + '" >' + data + '</a>';
                            }
                        }
                    },
                    { "data": "TranslatePlusDescription" },
                    { "data": "FileSizeBytes",
                        render: function (data, type, row, meta) {
                            return formatBytes(data);
                        }
                    },
                    { "data": "LastModifiedGMTDateTime",
                        render: function (data, type, row, meta) {
                            return getDateString(data);
                        }
                    },
                    {
                        "data": null,
                        "defaultContent": "N/A",
                        render: function (data, type, row, meta) {
                            if (type == "display") {
                                data = 'Delete';
                                //return '<a class="delete-iplusfileBtn" href="javascript:void(0);" >' + data + '</a>';
                                return '<button href="javascript:void(0);" class="delete-iplusfileBtn btn btn-sm btn-icon btn-outline-danger rounded-circle d-block m-auto" data-absolutepath="' + row.AbsoluteSystemFilePath +'" ><i class="fal fa-times"></i></button>';
                            }
                        }
                    }
                ],
                colReorder: true,
                responsive: true,
                paging: false,
                searching: false,
                dom:
                    "<'row mb-3'<'col-sm-12 col-md-6 d-flex align-items-center justify-content-start'f><'col-sm-12 col-md-6 d-flex align-items-center justify-content-end'B>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                buttons: [],

                initComplete: function () {
                    this.api().columns().every(function () {
                        var column = this;
                        var select = $('<select class="custom-select form-control"><option value=""></option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });
                    });
                }
            });
        }

        function initializeApprovedLinguistsTable() {
        var dataSet = @Html.Raw(JsonSerializer.Serialize( Model.ApprovedOrBlockedLinguists ));

            $('#dt-approved-linguists').dataTable(
                {
                    data: dataSet,
                    dataSrc: "",
                    columns: [
                    { "data": "LanguageServiceName" },
                    { "data": "SourceLangName" },
                    { "data": "TargetLangName" },
                    {
                        "data": "LinguistName",
                        "defaultContent": "N/A",
                        render: function (data, type, row, meta) {
                            if (type == "display") {
                                let link = `https://myplusbeta.publicisgroupe.net/Linguist?id=${row.LinguistId}`;
                                return '<a href="' + link + '" target="_blank" >' + data + '</a>';
                            }
                        }
                    },
                    {
                        "data": "StatusString",
                        "defaultContent": "N/A",
                        render: function (data, type, row, meta) {
                            if (type == "display") {

                                switch (row.Status) {
                                        case @((int)Enumerations.SupplierStatus.Blocked):
                                            //return `<span style="color: red;">Blocked (don't use for this client)</span>`;
                                            return `<span style="color: red;">${data}</span>`;
                                        break;
                                        case @((int)Enumerations.SupplierStatus.TemporarilyUnavailable):
                                            //return `<span style="color: red;">Temporarily unavailable</span>`;
                                            return `<span style="color: red;">${data}</span>`;
                                        break;
                                        case @((int)Enumerations.SupplierStatus.ApprovedByTheEndClient):
                                            //return `<span style="color: green;">Approved (by the client)</span>`;
                                            return `<span style="color: green;">${data}</span>`;
                                        break;
                                        case @((int)Enumerations.SupplierStatus.ApprovedByUsOnly):
                                            //return `<span style="color: green;">Approved (by us, but not by the client)</span>`;
                                            return `<span style="color: green;">${data}</span>`;
                                        break;
                                        default:
                                            return 'N/A';
                                }
                            }
                        }},
                    //{ "data": "StatusString"},
                    { "data": "WorkingPatternString"},
                    { "data": "WorkingTime"},
                    { "data": "SoftwareApplication"},
                    { "data": "AppliesToTypeString"},
                    { "data": "Notes"}//,
                    //{
                    //    "data": null,
                    //    "defaultContent": "N/A",
                    //    render: function (data, type, row, meta) {
                    //        if (type == "display") {
                    //            //return '<a class="delete-iplusfileBtn" href="javascript:void(0);" >' + data + '</a>';
                    //            return '<div class="d-flex"><button href="javascript:void(0);" class="btn btn-sm btn-icon btn-outline-warning rounded-circle mr-1" data-absolutepath="" ><i class="fal fa-ellipsis-v"></i></button>' + '<button href="javascript:void(0);" class="btn btn-sm btn-icon btn-outline-danger rounded-circle" ><i class="fal fa-times"></i></button></div>';
                    //        }
                    //    }
                    //}
                    ],
                     "order": [[3, "asc"]],
                    colReorder: true,
                    responsive: true,
                    dom:
                        "<'row mb-3'<'col-sm-12 col-md-6 d-flex align-items-center justify-content-start'f><'col-sm-12 col-md-6 d-flex align-items-center justify-content-end'B>>" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                    buttons: [
                    {
                        extend: 'pageLength',
                        className: 'btn-outline-default'
                    },
                    {
                        extend: 'colvis',
                        text: 'Column Visibility',
                        titleAttr: 'Col visibility',
                        className: 'btn-outline-default'
                    }
                ],

                    initComplete: function () {
                    this.api().columns().every(function () {
                        var column = this;
                        var select = $('<select class="custom-select form-control"><option value=""></option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });
                    });
                }
            });
        }

        function deleteIplusFileBtn() {
            $("#dt-iplus-docs tbody").on("click", "button.delete-iplusfileBtn", function () {
                let path = this.getAttribute('data-absolutepath');
                var iplusDocsClickedButton = $(this);
                console.log(iplusDocsClickedButton);
                console.log(iplusDocsTable);
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, delete it!"
                }).then(function (result) {
                    if (result.value) {
                    $.ajax({
                        url: "Organisation/DeleteFile?filePath=" + path,
                        type: "POST",
                        success: function (data) {
                            Swal.fire("Deleted!", "File has been deleted.", "success");

                            //iplusDocsTable.row(iplusDocsClickedButton.parents('tr')).remove().draw();
                            iplusDocsTable.fnDeleteRow(iplusDocsClickedButton.parents('tr'));
                        },
                        error: function (req, status, error) {
                            Swal.fire("Oops!", "There was an error while trying to delete the file.", "error");
                            console.log(error);
                        }
                    });
                    }
                });
            });
        }

        async function showAlertsOnPageLoad() {

            var isOnRedAlert = @(JsonSerializer.Serialize(Model.Organisation.IsOnRedAlert));
            if (isOnRedAlert) {
                await Swal.fire({
                    title: "This is a high sensitivity client and should be dealt with extra care (this may be due to a current test phase or recent quality feedback), please make sure to check if special QA procedures are required.",
                    width: 600,
                    padding: "2em",
                    //background: "#fff",
                    confirmButtonColor: '#E84133',
                    backdrop: '\n\t\t\t    rgba(232, 65, 51, 0.3)\n\t\t\t    center left\n\t\t\t    no-repeat\n\t\t\t  '
                });
            }
            var isOnRedAlert = @(JsonSerializer.Serialize(Model.Organisation.IsOnFinancialRedAlert));
            if (isOnRedAlert) {
                await Swal.fire({
                    title: "This client is in financial difficulties/they have not paid for overdue invoices and any new jobs should not be accepted or checked before commencing work.",
                    width: 600,
                    padding: "2em",
                    //background: "#fff",
                    confirmButtonColor: '#E84133',
                    backdrop: '\n\t\t\t    rgba(232, 65, 51, 0.3)\n\t\t\t    center left\n\t\t\t    no-repeat\n\t\t\t  '
                });
            }
        }

        function panelsAccessibility() {

            var isOrgDeleted = @(JsonSerializer.Serialize(Model.Organisation.DeletedDate != null));

            var keyInfo = '#' + @Html.Raw(JsonSerializer.Serialize(Model.keyInfoSection)) + ' :input';
            var jobSettings = '#' + @Html.Raw(JsonSerializer.Serialize(Model.jobSettingsSection)) + ' :input';
            var generalInfo = '#' + @Html.Raw(JsonSerializer.Serialize(Model.generalInfoSection)) + ' :input';
            var iplusSettings = '#' + @Html.Raw(JsonSerializer.Serialize(Model.iplusSettingsSection)) + ' :input';
            var sales = '#' + @Html.Raw(JsonSerializer.Serialize(Model.salesAndMarketingSection)) + ' :input';
            var chargeable = '#' + @Html.Raw(JsonSerializer.Serialize(Model.chargeableSoftwareSection)) + ' :input';
            var quoting = '#' + @Html.Raw(JsonSerializer.Serialize(Model.quotingAndInvoicingSection)) + ' :input';
            var lionBox = '#' + @Html.Raw(JsonSerializer.Serialize(Model.lionBoxSection)) + ' :input';
            var flowPlusLicencing = '#' + @Html.Raw(JsonSerializer.Serialize(Model.flowpluslicencingSection)) + ' :input';

            if(isOrgDeleted || @(JsonSerializer.Serialize(Model.keyInfoButton == false))){
                $(keyInfo).attr("disabled", true);
            }
            if(isOrgDeleted || @(JsonSerializer.Serialize(Model.jobSettingsButton == false))){
                $(jobSettings).attr("disabled", true);
            }
            if(isOrgDeleted || @(JsonSerializer.Serialize(Model.generalInfoButton == false))){
                $(generalInfo).attr("disabled", true);
            }
            if(isOrgDeleted || @(JsonSerializer.Serialize(Model.iplusSettingsButton == false))){
                $(iplusSettings).attr("disabled", true);
            }
            if(isOrgDeleted || @(JsonSerializer.Serialize(Model.salesAndMarketingButton == false))){
                $(sales).attr("disabled", true);
            }
            if(isOrgDeleted || @(JsonSerializer.Serialize(Model.chargeableSoftwareButton == false))){
                $(chargeable).attr("disabled", true);
            }
            if(isOrgDeleted || @(JsonSerializer.Serialize(Model.quotingAndInvoicingButton == false))){
                $(quoting).attr("disabled", true);
            }
            if(isOrgDeleted || @(JsonSerializer.Serialize(Model.lionBoxButton == false))){
                $(lionBox).attr("disabled", true);
            }
            if(isOrgDeleted || @(JsonSerializer.Serialize(Model.flowpluslicencingButton == false))){
                $(flowPlusLicencing).attr("disabled", true);
            }
        }

        $('#@(nameof(Model.Organisation.IsOnRedAlert))').on('click', function(){
            if ($(this).prop('checked') == false) {
                $('#redAlertReasonDiv').css('display', 'none');
            }
            else {
                $('#redAlertReasonDiv').css('display', '');
            }
         })
        $('#@(nameof(Model.Organisation.IsOnFinancialRedAlert))').on('click', function(){
            if ($(this).prop('checked') == false) {
                $('#financialRedAlertReasonDiv').css('display', 'none');
            }
            else {
                $('#financialRedAlertReasonDiv').css('display', '');
            }
         })
        $('#@nameof(Model.Organisation.EnabledForOrgLevelMarginsThreshold)').click(function(){
            if($(this).prop('checked') == false){
               $('#marginsThresholds').css('display', 'none');
            }
            else{
               $('#marginsThresholds').css('display', '');
            }
        })
        $('#@nameof(Model.Organisation.InvoicingAutoCreateAndSendInvoices)').click(function(){
            if($(this).prop('checked') == false){
               $('#autoReasonOff').css('display', '');
            }
            else{
               $('#autoReasonOff').css('display', 'none');
            }
        })
        $('#@nameof(Model.Organisation.IncludeInNotificationsOn)').click(function(){
            if($(this).prop('checked') == false){
               $('#@nameof(Model.Organisation.IncludeInNotifications)').prop('disabled', true);
            }
            else{
               $('#@nameof(Model.Organisation.IncludeInNotifications)').prop('disabled', false);
            }
        })
    </script>
}
