@{
    @using ViewModels.SharePlus;
    @model SharePlusCreateModel;
}
@section HeadBlock {
    <link rel="stylesheet" media="screen, print" href="~/css/notifications/sweetalert2/sweetalert2.bundle.css">
    <link rel="stylesheet" media="screen, print" href="~/css/notifications/toastr/toastr.css">
    <link rel="stylesheet" media="screen, print" href="~/css/theme-demo.css">
}

<form method="post" asp-action="Create">
    <div id="cp-1" class="card border">
        <div class="card-header text-center text-lg-center">
            <div class="d-inline-flex">
                <input type="text" id="example-input-pill" asp-for="Title" class="form-control rounded-pill" placeholder="Title" style="width: 24rem;">
                <div class="custom-control custom-switch ml-5" style="width:13rem;">
                    <input type="checkbox" asp-for="IsPinnedArticle" class="custom-control-input" id="customSwitch2">
                    <label class="custom-control-label" for="customSwitch2">Pin this article</label>
                </div>
            </div>
            <div class="d-block mt-3">
                <button id="create-btn" class="@(Settings.Theme.IconPrefix) btn btn-outline-success" type="submit" asp-action="Create"><i class="fal fa-save fa-2x"></i></button>
                &nbsp; &nbsp;
                <a class="@(Settings.Theme.IconPrefix) btn btn-outline-dark" asp-action="Articles"><i class="fal fa-ban fa-2x"></i></a>
            </div>
        </div>
        <div class="card-body p-0 show text-left">
            <div class="p-4">
                <textarea id="TinyMceTextarea" asp-for="Htmlbody"></textarea>
            </div>
        </div>
    </div>
    <input asp-for="Contents" type="hidden" />
</form>

@section ScriptsBlock
{
    <script src="~/js/tinymce/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="~/js/notifications/sweetalert2/sweetalert2.bundle.js"></script>
    <script src="~/js/notifications/toastr/toastr.js"></script>

    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'a11ychecker image imagetools image code advcode advlist casechange formatpainter linkchecker autolink lists checklist media mediaembed pageembed permanentpen powerpaste table advtable tinycomments tinymcespellchecker autolink link',
            toolbar: 'insertfile undo redo | fontselect fontsizeselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist | link image | print preview media fullpage | forecolor backcolor emoticons | a11ycheck addcomment showcomments link| casechange checklist code formatpainter pageembed permanentpen table',
            toolbar_mode: 'wrap',
            toolbar_sticky: 'true',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            height: "746",
            menubar: 'file edit insert view format table tools help',
            file_picker_types: 'image',
            default_link_target: '_blank',
            block_unsupported_drop: true,
            /* and here's our custom image picker*/
            file_picker_callback: function (cb, value, meta) {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');
                /* Note: In modern browsers input[type="file"] is functional without
                  even adding it to the DOM, but that might not be the case in some older
                  or quirky browsers like IE, so you might want to add it to the DOM
                  just in case, and visually hide it. And do not forget do remove it
                  once you do not need it anymore. */
                input.onchange = function () {
                    var file = this.files[0];

                    var reader = new FileReader();
                    reader.onload = function () {
                        /* Note: Now we need to register the blob in TinyMCEs image blob
                          registry. In the next release this part hopefully won't be
                          necessary, as we are looking to handle it internally. */
                        var id = 'blobid' + (new Date()).getTime();
                        var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                        var base64 = reader.result.split(',')[1];
                        var blobInfo = blobCache.create(id, file, base64);
                        blobCache.add(blobInfo);

                        /* call the callback and populate the Title field with the file name */
                        cb(blobInfo.blobUri(), { title: file.name });
                    };
                    reader.readAsDataURL(file);
                };
                input.click();
            }
        });

        $("#create-btn").click(function () {

            toastr["success"]("Article added successfully.", "Amazing!")

            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": true,
                "onclick": null,
                "showDuration": 300,
                "hideDuration": 150,
                "timeOut": 5000,
                "extendedTimeOut": 1000,
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
        });
    </script>
}